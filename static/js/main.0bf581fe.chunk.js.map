{"version":3,"sources":["utils/IsLoggedIn.js","utils/helper.js","components/layouts/AppNav.jsx","components/layouts/ProtectedRoute.jsx","components/auth/LoginForm.jsx","api/auth.js","components/auth/LogoutForm.jsx","components/errors/PageNotFound.jsx","components/auth/index.js","utils/API.js","api/users.js","components/common/paginate.js","components/users/UsersList.jsx","api/branches.js","components/users/UserForm.jsx","components/users/index.js","components/branches/BranchesList.jsx","components/branches/BranchForm.jsx","components/branches/index.js","api/taxes.js","components/taxes/TaxesList.jsx","components/taxes/TaxForm.jsx","components/taxes/index.js","api/desks.js","components/desks/DesksList.jsx","components/desks/DeskForm.jsx","components/desks/index.js","api/categories.js","components/categories/CategoriesList.jsx","components/categories/CategoryForm.jsx","components/categories/index.js","api/foodMenus.js","actions/foodMenus.js","actions/actionTypes.js","components/foodMenus/FoodMenusList.jsx","components/foodMenus/FoodMenuForm.jsx","components/foodMenus/index.js","api/orders.js","components/orders/OrdersList.jsx","components/foodMenus/FoodMenuLineItem.jsx","components/orders/OrderForm.jsx","components/orders/index.js","api/invoices.js","components/invoices/InvoicesList.jsx","components/invoices/InvoiceForm.jsx","components/invoices/InvoiceMultiForm.jsx","components/invoices/index.js","actions/kitchenOrders.js","components/kitchenOrders/KitchenOrderList.jsx","components/kitchenOrders/index.js","routes/index.js","reducers/foodMenuReducer.js","reducers/kitchenOrderReducer.js","App.js","serviceWorker.js","index.js"],"names":["token","localStorage","getItem","IsLoggedIn","to","_IsLoggedIn","formatDate","str","current_datetime","Date","getDate","getMonth","getFullYear","updateObject","oldObject","updatedProperties","decodeJWT","jwt_decode","isLoggedIn","_decodeJWT","AppNav","props","Navbar","bg","fixed","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","as","is_root_admin","NavDropdown","title","Item","alignRight","email","ProtectedRoute","Component","component","rest","render","pathname","state","from","location","LoginForm","history","push","useState","EmployeeNo","setEmployeeNo","Row","Form","onSubmit","e","preventDefault","data","cb","axios","post","then","response","setItem","catch","err","console","log","login","employee_no","window","Group","Label","column","md","Col","Control","type","name","value","onChange","target","Button","variant","LogoutForm","removeItem","PageNotFound","Auth","path","useRouteMatch","exact","config","baseURL","headers","Authorization","instance","create","interceptors","request","use","prevParams","params","branch_id","branch","error","Promise","reject","get","put","delete","getUsers","a","async","_params","sort_by","sortBy","sort","page","per_page","endPoint","userId","kotAgent","paginate","total","totalLength","perPage","handlePage","Pagination","First","disabled","onClick","Prev","pageNumbers","i","key","active","Math","ceil","renderPagination","Next","Last","UsersList","users","makeHttpRequestWithPage","removeUser","deleteUser","useEffect","color","Table","striped","hover","length","colSpan","align","map","user","user_name","phone_number","getBranches","branchId","UserForm","userName","setUserName","employeeNo","password","setPassword","setEmail","setBranch","isWaiter","setIsWaiter","isStaff","setIsStaff","isEditMode","setIsEditMode","branchList","setBranchList","res","branches","match","is_waiter","is_staff","updateUser","createUser","b","selected","Check","inline","label","checked","Users","BranchesList","setState","old","page_context","removeBranch","deleteBranch","shop_address","description","BranchForm","setName","shopAddress","setShopAddress","setDescription","updateBranch","createBranch","rows","Branches","getTaxes","taxId","TaxesList","taxes","removeTax","deleteTax","tax","percentage","TaxForm","setPercentage","updateTax","createTax","Taxes","getDesks","deskId","DesksList","desks","removeDesk","deleteDesk","desk","DeskForm","updateDesk","createDesk","Desks","getCategories","categoryId","CategoriesList","categories","removeCategory","deleteCategory","category","CategoryForm","updateCategory","createCategory","Categories","fetchFoodMenus","dispatch","foodMenuId","foodMenus","food_menus","payload","fetchAllFoodMenus","connect","rsFoodMenu","foodMenuPaginationList","resultSet","meta","currentPage","totalRecords","rFetchFoodMenus","removeFoodMenu","rFetchAllFoodMenus","deleteFoodMenu","foodMenu","Image","src","file_url","width","height","roundedCircle","base_price","FoodMenuForm","defaultBranch","isRootAdmin","basePrice","setBasePrice","setCategory","setTax","taxList","setTaxList","categoryList","setCategoryList","fileUrl","isLoaded","selectedFile","setSelectedFile","getFoodMenus","food_menu","FormData","append","updateFoodMenu","createFoodMenu","files","FoodMenus","FoodMenusList","getOrders","orderId","OrdersList","orders","style","textAlign","order","order_placed_date","order_no","sub_total","foodMenusList","foodMenuAllList","idx","foodMenuItem","handleDynamicInput","handleRemoveLineItem","_foodMenu","_quantity","_unit_price","data-idx","data-attr","forEach","toString","updateLineItemPrice","f","quantity","autoComplete","unit_price","icon","faMinusCircle","subTotal","setSubTotal","blankFoodMenu","foodMenuState","setFoodMenuState","menuPrice","updatedFoodMenus","dataset","attr","calcSubTotal","filteredOrderFoodMenus","filter","index","toast","warn","foodMenuStateData","sumSubTotal","parseFloat","mappedOrderFoodMenus","order_food_menus","orderFoodMenu","line_items","success","message","updateOrder","createOrder","result","Orders","OrderForm","getInvoices","invoiceId","InvoicesList","invoices","invoice","invoice_date","invoice_no","paid_amount","net_total","query","URLSearchParams","useLocation","search","invoiceForId","setInvoiceForId","paymentMode","setPaymentMode","paidAmount","setPaidAmount","paymentDescription","setPaymentDescription","userList","setUserList","orderNo","setOrderNo","filteredInvoiceFoodMenus","invoice_for","payment_mode","payment_description","mappedInvoiceFoodMenus","invoice_food_menus","invoiceFoodMenu","invoice_for_id","updateInvoice","createInvoice","u","val","InvoiceMultiForm","Tabs","defaultActiveKey","Tab","eventKey","Invoices","InvoiceForm","onGoingFoodMenuOrders","rsKitchenOrder","kitchenOrderList","servedFoodMenuOrders","rFetchKitchenOrders","is_kitchen_user","new_orders","served_orders","rUpdateOnGoingFoodMenuOrder","status","kitchenOrder","updateOnGoingFoodMenuOrder","rAddServedFoodMenuOrder","addServedFoodMenuOrder","rAddOnGoingFoodMenuOrder","newOrders","newKitchenOrders","addOnGoingFoodMenuOrder","rCancelOnGoingFoodMenuOrder","cancelledFoodMenuStatusId","cancelOnGoingFoodMenuOrder","created_at","food_menu_name","status_code","KitchenOrderList","Routes","kitchenOrders","initialState","isFetching","isSuccess","isFailed","lastUpdateTime","action","reducer","fetchAllKitchenOrders","oldServedFoodMenuOrders","newOnGoingFoodMenuOrdersResultSet","ko","newResultSet","concat","JSON","parse","oldOnGoingFoodMenuOrdersResultSet","oldServedFoodMenuOrdersResultSet","newServedFoodMenuOrder","newServedFoodMenuOrdersResultSet","browserHistory","createBrowserHistory","rootReducer","combineReducers","foodMenuReducer","kitchenOrderReducer","store","createStore","applyMiddleware","thunk","App","position","POSITION","BOTTOM_CENTER","autoClose","draggable","hideProgressBar","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0bf581fe.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nconst token = localStorage.getItem(\"token\");\r\n// const isLoggedInUser = false;\r\nconst IsLoggedIn = () => {\r\n  if (token) {\r\n    return null;\r\n  }\r\n  return <Redirect to=\"/login\" />;\r\n};\r\nconst _IsLoggedIn = () => {\r\n  if (token) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\nexport { IsLoggedIn, _IsLoggedIn };\r\n","import jwt_decode from \"jwt-decode\";\r\nconst formatDate = str => {\r\n  let current_datetime = new Date(str);\r\n  return (\r\n    current_datetime.getDate() +\r\n    \"-\" +\r\n    (current_datetime.getMonth() + 1) +\r\n    \"-\" +\r\n    current_datetime.getFullYear()\r\n  );\r\n};\r\nexport { formatDate };\r\n\r\nexport const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties\r\n  };\r\n};\r\n\r\nexport const getToken = () => {\r\n  return localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : false;\r\n};\r\nexport const decodeJWT = () => {\r\n  return localStorage.getItem(\"token\")\r\n    ? jwt_decode(localStorage.getItem(\"token\"))\r\n    : false;\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { _IsLoggedIn } from \"../../utils/IsLoggedIn\";\r\nimport { decodeJWT } from \"../../utils/helper\";\r\nconst isLoggedIn = _IsLoggedIn();\r\nconst _decodeJWT = decodeJWT();\r\nconst AppNav = props => {\r\n  return (\r\n    <Navbar bg=\"primary\" fixed=\"top\" expand=\"lg\">\r\n      <Navbar.Brand href=\"#home\">Kerala Foods</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        {isLoggedIn ? (\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"#home\">Dashboard</Nav.Link>\r\n            <Nav.Link as={Link} to=\"/orders\">\r\n              Orders\r\n            </Nav.Link>\r\n            <Nav.Link as={Link} to=\"/invoices\">\r\n              Invoices\r\n            </Nav.Link>\r\n            <Nav.Link as={Link} to=\"/foodmenus\">\r\n              Food Menus\r\n            </Nav.Link>\r\n            <Nav.Link as={Link} to=\"/kitchenOrders\">\r\n              Kitchen Orders\r\n            </Nav.Link>\r\n            {_decodeJWT.is_root_admin ? (\r\n              <NavDropdown title=\"Settings\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item as={Link} to=\"/desks\">\r\n                  Desks\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item as={Link} to=\"/categories\">\r\n                  Categories\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item as={Link} to=\"/taxes\">\r\n                  Taxes\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item as={Link} to=\"/users\">\r\n                  Users\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item as={Link} to=\"/branches\">\r\n                  Branches\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            ) : null}\r\n          </Nav>\r\n        ) : null}\r\n        {isLoggedIn ? (\r\n          <Nav>\r\n            <NavDropdown\r\n              alignRight\r\n              title={_decodeJWT.email}\r\n              id=\"basic-nav-dropdown\"\r\n            >\r\n              {/* <NavDropdown.Item href=\"#action/3.1\">\r\n                Change Password\r\n              </NavDropdown.Item> */}\r\n              <NavDropdown.Item as={Link} to=\"/logout\">\r\n                Log out\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n        ) : (\r\n          <Nav className=\"ml-auto\">\r\n            <Nav.Link as={Link} to=\"/login\">\r\n              Login\r\n            </Nav.Link>\r\n          </Nav>\r\n        )}\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default AppNav;\r\n","import React, { Fragment } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { _IsLoggedIn } from \"../../utils/IsLoggedIn\";\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  const isLoggedIn = _IsLoggedIn();\r\n  return (\r\n    <Fragment>\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          isLoggedIn ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { login } from \"../../api/auth\";\r\nimport { _IsLoggedIn } from \"../../utils/IsLoggedIn\";\r\nconst LoginForm = props => {\r\n  const isLoggedIn = _IsLoggedIn();\r\n  if (isLoggedIn) {\r\n    props.history.push(\"/dashboard\");\r\n  }\r\n\r\n  const [EmployeeNo, setEmployeeNo] = useState(\"\");\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const data = {\r\n      employee_no: EmployeeNo\r\n    };\r\n    login(data, () => {\r\n      // props.history.push(\"/dashboard\");\r\n      window.location.href = \"/orders\";\r\n    });\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Row className=\"mt-2 ml-3 mr-3\">\r\n        <h3>Login</h3>\r\n        <hr />\r\n      </Row>\r\n      <Form className=\"ml-3 mr-3\" onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column md=\"2\">\r\n            Employee No.\r\n          </Form.Label>\r\n          <Col md=\"4\">\r\n            <Form.Control\r\n              type=\"password\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              value={EmployeeNo}\r\n              onChange={e => setEmployeeNo(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        {/* <Form.Group as={Row}>\r\n          <Form.Label column md=\"2\">\r\n            Password\r\n          </Form.Label>\r\n          <Col md=\"4\">\r\n            <Form.Control\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={e => setPassword(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Form.Group> */}\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Login\r\n        </Button>\r\n      </Form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import axios from \"axios\";\r\n\r\nconst login = (data, cb) => {\r\n  axios\r\n    .post(\"/auth/login\", data)\r\n    .then(response => {\r\n      localStorage.setItem(\"token\", response.data.data.token);\r\n      cb(true);\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\nconst logout = () => {\r\n  if (localStorage.removeItem(\"token\")) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport { login, logout };\r\n","import { logout } from \"../../api/auth\";\r\nconst LogoutForm = props => {\r\n  logout();\r\n  window.location = \"/login\";\r\n};\r\n\r\nexport default LogoutForm;\r\n","import React, { Fragment } from \"react\";\r\nconst PageNotFound = props => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container mt-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"error-template\">\r\n              <h1>Oops!</h1>\r\n              <h2>404 Not Found</h2>\r\n              <div className=\"error-details\">\r\n                Sorry, an error has occured, Requested page not found!\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import React, { Fragment } from \"react\";\r\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport LogoutForm from \"./LogoutForm\";\r\nimport { PageNotFound } from \"../errors\";\r\nconst Auth = () => {\r\n  let { path } = useRouteMatch();\r\n  console.log(path);\r\n  return (\r\n    <Fragment>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={LoginForm} />\r\n        <Route exact path=\"/login\" component={LoginForm} />\r\n        <Route exact path=\"/logout\" component={LogoutForm} />\r\n        <Route path=\"*\" component={PageNotFound} />\r\n      </Switch>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import axios from \"axios\";\r\nimport { decodeJWT, getToken } from \"./helper\";\r\nconst _decodeJWT = decodeJWT();\r\nconst token = getToken();\r\nconst baseURL = \"http://157.245.227.166/api/v1/\";\r\n// const baseURL = \"http://192.168.0.97:8000/api/v1/\";\r\nconst config = {\r\n  baseURL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    Authorization: \"Bearer \" + token\r\n  }\r\n};\r\nconst instance = axios.create(config);\r\ninstance.interceptors.request.use(\r\n  function(config) {\r\n    if (_decodeJWT.is_root_admin === false) {\r\n      const prevParams = config.params;\r\n      config.params = { ...prevParams, branch_id: _decodeJWT.branch };\r\n    }\r\n    return config;\r\n  },\r\n  function(error) {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default {\r\n  get: instance.get,\r\n  post: instance.post,\r\n  put: instance.put,\r\n  delete: instance.delete\r\n};\r\n","import kotAgent from \"../utils/API\";\r\n// const getUsers = (params, cb) => {\r\n//   const _params = {\r\n//     sort_by: params.sortBy,\r\n//     sort: params.sort,\r\n//     page: params.page,\r\n//     per_page: params.per_page\r\n//   };\r\n//   const endPoint = params.userId ? \"/users/\" + params.userId : \"/users\";\r\n//   kotAgent\r\n//     .get(endPoint, { params: _params })\r\n//     .then(response => {\r\n//       cb(response);\r\n//     })\r\n//     .catch(error => {\r\n//       cb(error.response);\r\n//     });\r\n// };\r\nconst getUsers = async params => {\r\n  const _params = {\r\n    sort_by: params.sortBy,\r\n    sort: params.sort,\r\n    page: params.page,\r\n    per_page: params.per_page\r\n  };\r\n  const endPoint = params.userId ? \"/users/\" + params.userId : \"/users\";\r\n  return await kotAgent.get(endPoint, { params: _params });\r\n};\r\nconst createUser = (data, props) => {\r\n  kotAgent\r\n    .post(\"/users\", data)\r\n    .then(response => {\r\n      props.history.push(\"/users\");\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\nconst updateUser = (data, props) => {\r\n  kotAgent\r\n    .put(\"/users/\" + props.match.params.id, data)\r\n    .then(response => {\r\n      props.history.push(\"/users\");\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\nconst deleteUser = (userId, cb) => {\r\n  kotAgent\r\n    .delete(\"/users/\" + userId)\r\n    .then(response => {\r\n      cb(response.data);\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport { createUser, updateUser, deleteUser, getUsers };\r\n","import React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nconst paginate = props => {\r\n  const { page, total, totalLength, perPage, handlePage } = props;\r\n  // console.log(page, total, totalLength, perPage);\r\n  const renderPagination = () => {\r\n    if (totalLength === 0) return null;\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(total / perPage); i++) {\r\n      pageNumbers.push(\r\n        <Pagination.Item\r\n          key={i}\r\n          active={i === page}\r\n          onClick={() => {\r\n            return page !== i ? handlePage(i) : null;\r\n          }}\r\n        >\r\n          {i}\r\n        </Pagination.Item>\r\n      );\r\n    }\r\n    return pageNumbers;\r\n  };\r\n  return (\r\n    <Pagination>\r\n      <Pagination.First\r\n        disabled={page === 1 ? true : false}\r\n        onClick={() => handlePage(1)}\r\n      />\r\n      <Pagination.Prev\r\n        disabled={page === 1 ? true : false}\r\n        onClick={() => handlePage(page - 1)}\r\n      />\r\n      {renderPagination()}\r\n      <Pagination.Next\r\n        disabled={page === Math.ceil(total / perPage) ? true : false}\r\n        onClick={() => handlePage(page + 1)}\r\n      />\r\n      <Pagination.Last\r\n        disabled={page === Math.ceil(total / perPage) ? true : false}\r\n        onClick={() => handlePage(Math.ceil(total / perPage))}\r\n      />\r\n    </Pagination>\r\n  );\r\n};\r\nexport default paginate;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Button, Table } from \"react-bootstrap\";\r\nimport { getUsers, deleteUser } from \"../../api/users\";\r\nimport Paginate from \"../common/paginate\";\r\nconst UsersList = props => {\r\n  const [state, setState] = useState({\r\n    users: [],\r\n    page: null,\r\n    per_page: null,\r\n    total: null\r\n  });\r\n  const makeHttpRequestWithPage = page => {\r\n    getUsers(\r\n      {\r\n        userId: null,\r\n        sortBy: \"id\",\r\n        sort: \"desc\",\r\n        page: page\r\n      },\r\n      cb => {\r\n        if (cb.status === 401) {\r\n          props.history.push(\"/login\");\r\n        }\r\n        setState(old => {\r\n          return {\r\n            ...old,\r\n            users: cb.data.data.users,\r\n            page: cb.data.data.page_context.page,\r\n            per_page: cb.data.data.page_context.per_page,\r\n            total: cb.data.data.page_context.total\r\n          };\r\n        });\r\n      }\r\n    );\r\n  };\r\n  const removeUser = userId => {\r\n    deleteUser(userId, cb => {\r\n      makeHttpRequestWithPage(1);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    makeHttpRequestWithPage(1);\r\n  }, []);\r\n  const renderList = () => {\r\n    if (state.users.length === 0)\r\n      return (\r\n        <tr>\r\n          <td colSpan=\"5\" align=\"center\">\r\n            User not found\r\n          </td>\r\n        </tr>\r\n      );\r\n    return state.users.map(user => (\r\n      <tr key={user.id}>\r\n        <td></td>\r\n        <td>{user.user_name}</td>\r\n        <td>{user.employee_no}</td>\r\n        <td>{user.email}</td>\r\n        <td>{user.phone_number}</td>\r\n        <td>\r\n          <Link to={\"/users/edit/\" + user.id}>Edit</Link>\r\n          <button onClick={() => removeUser(user.id)}>Delete</button>\r\n        </td>\r\n      </tr>\r\n    ));\r\n  };\r\n  return (\r\n    <Row className=\"m-1 mt-2\">\r\n      <Col>\r\n        <h3>User List</h3>\r\n      </Col>\r\n      <Col>\r\n        <Link to=\"/users/new\">\r\n          <Button\r\n            variant=\"outline-primary\"\r\n            color=\"primary\"\r\n            className=\"float-right\"\r\n          >\r\n            New User\r\n          </Button>\r\n        </Link>\r\n      </Col>\r\n\r\n      <Table className=\"mt-2\" striped hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Employee No</th>\r\n            <th>Email</th>\r\n            <th>Phone Number</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{renderList()}</tbody>\r\n      </Table>\r\n      <Paginate\r\n        page={state.page}\r\n        total={state.total}\r\n        totalLength={state.users.length}\r\n        perPage={state.per_page}\r\n        handlePage={makeHttpRequestWithPage}\r\n      />\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","import kotAgent from \"../utils/API\";\r\nconst getBranches = async params => {\r\n  const _params = {\r\n    sort_by: params.sortBy,\r\n    sort: params.sort,\r\n    page: params.page,\r\n    per_page: params.per_page\r\n  };\r\n  const endPoint = params.branchId\r\n    ? \"/branches/\" + params.branchId\r\n    : \"/branches\";\r\n  return await kotAgent.get(endPoint, { params: _params });\r\n};\r\nconst createBranch = (data, props) => {\r\n  kotAgent\r\n    .post(\"/branches\", data)\r\n    .then(response => {\r\n      props.history.push(\"/branches\");\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\nconst updateBranch = (data, props) => {\r\n  kotAgent\r\n    .put(\"/branches/\" + props.match.params.id, data)\r\n    .then(response => {\r\n      props.history.push(\"/branches\");\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\nconst deleteBranch = (branchId, cb) => {\r\n  kotAgent\r\n    .delete(\"/branches/\" + branchId)\r\n    .then(response => {\r\n      cb(response.data);\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport { createBranch, updateBranch, deleteBranch, getBranches };\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { createUser, updateUser, getUsers } from \"../../api/users\";\r\nimport { getBranches } from \"../../api/branches\";\r\nconst UserForm = props => {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [employeeNo, setEmployeeNo] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [branch, setBranch] = useState(\"\");\r\n  const [isWaiter, setIsWaiter] = useState(false);\r\n  const [isStaff, setIsStaff] = useState(false);\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [branchList, setBranchList] = useState([]);\r\n  useEffect(() => {\r\n    getBranches({}).then(res => {\r\n      setBranchList(res.data.data.branches);\r\n    });\r\n    if (props.match.params.id) {\r\n      setIsEditMode(true);\r\n      getUsers({\r\n        userId: props.match.params.id\r\n      }).then(res => {\r\n        setUserName(res.data.data.user.user_name);\r\n        setEmployeeNo(res.data.data.user.employee_no);\r\n        setPassword(res.data.data.user.password);\r\n        setEmail(res.data.data.user.email);\r\n        setBranch(res.data.data.user.branch_id);\r\n        setIsWaiter(res.data.data.user.is_waiter);\r\n        setIsStaff(res.data.data.user.is_staff);\r\n      });\r\n    }\r\n  }, [props]);\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const data = {\r\n      user_name: userName,\r\n      employee_no: employeeNo,\r\n      email: email,\r\n      is_waiter: isWaiter,\r\n      is_staff: isStaff,\r\n      branch: branch\r\n    };\r\n    if (isEditMode) {\r\n      return updateUser(data, props);\r\n    } else {\r\n      data.password = password;\r\n      return createUser(data, props);\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Row className=\"mt-2 ml-3 mr-3\">\r\n        <Col>{isEditMode ? <h3>Edit User</h3> : <h3>New User</h3>}</Col>\r\n      </Row>\r\n      <Form className=\"ml-3 mr-3\" onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column md=\"2\">\r\n            Username\r\n          </Form.Label>\r\n          <Col md=\"4\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"userName\"\r\n              id=\"userName\"\r\n              value={userName}\r\n              onChange={e => setUserName(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column md=\"2\">\r\n            Email\r\n          </Form.Label>\r\n          <Col md=\"4\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={email}\r\n              name=\"email\"\r\n              id=\"email\"\r\n              onChange={e => setEmail(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column md=\"2\">\r\n            Employee No\r\n          </Form.Label>\r\n          <Col md=\"4\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={employeeNo}\r\n              name=\"employee_no\"\r\n              id=\"employee_no\"\r\n              onChange={e => setEmployeeNo(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        {!isEditMode ? (\r\n          <Fragment>\r\n            <Form.Group as={Row}>\r\n              <Form.Label column md=\"2\">\r\n                Password\r\n              </Form.Label>\r\n              <Col md=\"4\">\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  value={password}\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={e => setPassword(e.target.value)}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n              <Form.Label column md=\"2\">\r\n                Branch Name\r\n              </Form.Label>\r\n              <Col md=\"4\">\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  name=\"branch\"\r\n                  id=\"branch\"\r\n                  onChange={e => setBranch(e.target.value)}\r\n                >\r\n                  <option value=\"\">Select the Branch</option>\r\n                  {branchList.map(b => (\r\n                    <option\r\n                      value={b.id}\r\n                      selected={branch === b.id ? true : false}\r\n                    >\r\n                      {b.name}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Col>\r\n            </Form.Group>\r\n          </Fragment>\r\n        ) : null}\r\n        <Form.Group as={Row}>\r\n          <Form.Label column md=\"2\">\r\n            Roles\r\n          </Form.Label>\r\n          <Col md=\"4\">\r\n            <Form.Check\r\n              inline\r\n              label=\"Billing\"\r\n              type=\"checkbox\"\r\n              id=\"isStaff\"\r\n              name=\"isStaff\"\r\n              checked={isStaff}\r\n              onClick={e => setIsStaff(!isStaff)}\r\n            />\r\n            <Form.Check\r\n              inline\r\n              label=\"Waiter\"\r\n              type=\"checkbox\"\r\n              id=\"isWaiter\"\r\n              name=\"isWaiter\"\r\n              checked={isWaiter}\r\n              onClick={e => setIsWaiter(!isWaiter)}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserForm;\r\n","import React, { Fragment } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport UsersList from \"./UsersList\";\r\nimport UserForm from \"./UserForm\";\r\nimport { IsLoggedIn } from \"../../utils/IsLoggedIn\";\r\nimport { PageNotFound } from \"../errors\";\r\nconst Users = () => {\r\n  return (\r\n    <Fragment>\r\n      <Switch>\r\n        <Route path=\"/users\" exact component={UsersList} />\r\n        <Route path=\"/users/new\" exact component={UserForm} />\r\n        <Route path=\"/users/edit/:id\" exact component={UserForm} />\r\n        <Route path=\"*\" component={PageNotFound} />\r\n      </Switch>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Button, Table } from \"react-bootstrap\";\r\nimport { getBranches, deleteBranch } from \"../../api/branches\";\r\nimport Paginate from \"../common/paginate\";\r\n\r\nconst BranchesList = () => {\r\n  const [state, setState] = useState({\r\n    branches: [],\r\n    page: null,\r\n    per_page: null,\r\n    total: null\r\n  });\r\n  const makeHttpRequestWithPage = page => {\r\n    getBranches({\r\n      branchId: null,\r\n      sortBy: \"id\",\r\n      sort: \"desc\",\r\n      page: page\r\n    }).then(res => {\r\n      setState(old => {\r\n        return {\r\n          ...old,\r\n          branches: res.data.data.branches,\r\n          page: res.data.data.page_context.page,\r\n          per_page: res.data.data.page_context.per_page,\r\n          total: res.data.data.page_context.total\r\n        };\r\n      });\r\n    });\r\n  };\r\n  const removeBranch = branchId => {\r\n    deleteBranch(branchId, cb => {\r\n      makeHttpRequestWithPage(1);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    makeHttpRequestWithPage(1);\r\n  }, []);\r\n  const renderList = () => {\r\n    if (state.branches.length === 0)\r\n      return (\r\n        <tr>\r\n          <td colSpan=\"5\" align=\"center\">\r\n            Branch not found\r\n          </td>\r\n        </tr>\r\n      );\r\n    return state.branches.map(branch => (\r\n      <tr key={branch.id}>\r\n        <td></td>\r\n        <td>{branch.name}</td>\r\n        <td>{branch.shop_address}</td>\r\n        <td>{branch.description}</td>\r\n        <td>\r\n          <Link to={\"/branches/edit/\" + branch.id}>Edit</Link>\r\n          <button onClick={() => removeBranch(branch.id)}>Delete</button>\r\n        </td>\r\n      </tr>\r\n    ));\r\n  };\r\n  return (\r\n    <Row className=\"m-1 mt-2\">\r\n      <Col>\r\n        <h3>Branch List</h3>\r\n      </Col>\r\n      <Col>\r\n        <Link to=\"/branches/new\">\r\n          <Button\r\n            variant=\"outline-primary\"\r\n            color=\"primary\"\r\n            className=\"float-right\"\r\n          >\r\n            New Branch\r\n          </Button>\r\n        </Link>\r\n      </Col>\r\n\r\n      <Table className=\"mt-2\" striped hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Shop Address</th>\r\n            <th>Description</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{renderList()}</tbody>\r\n      </Table>\r\n      <Paginate\r\n        page={state.page}\r\n        total={state.total}\r\n        totalLength={state.branches.length}\r\n        perPage={state.per_page}\r\n        handlePage={makeHttpRequestWithPage}\r\n      />\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default BranchesList;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { createBranch, updateBranch, getBranches } from \"../../api/branches\";\r\nconst BranchForm = props => {\r\n  const [name, setName] = useState(\"\");\r\n  const [shopAddress, setShopAddress] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  useEffect(() => {\r\n    if (props.match.params.id) {\r\n      setIsEditMode(true);\r\n      getBranches({\r\n        branchId: props.match.params.id\r\n      }).then(res => {\r\n        setName(res.data.data.branch.name);\r\n        setShopAddress(res.data.data.branch.shop_address);\r\n        setDescription(res.data.data.branch.description);\r\n      });\r\n    }\r\n  }, [props]);\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const data = {\r\n      name: name,\r\n      shop_address: shopAddress,\r\n      description: description\r\n    };\r\n    if (isEditMode) return updateBranch(data, props);\r\n    createBranch(data, props);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Row className=\"mt-2 ml-3 mr-3\">\r\n        <Col>{isEditMode ? <h3>Edit Branch</h3> : <h3>New Branch</h3>}</Col>\r\n      </Row>\r\n      <Form className=\"ml-3 mr-3\" onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column md=\"2\">\r\n            Name\r\n          </Form.Label>\r\n          <Col md=\"4\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              value={name}\r\n              onChange={e => setName(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column md=\"2\">\r\n            Shop Address\r\n          </Form.Label>\r\n          <Col md=\"4\">\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows=\"3\"\r\n              value={shopAddress}\r\n              name=\"shop_address\"\r\n              id=\"shop_address\"\r\n              onChange={e => setShopAddress(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column md=\"2\">\r\n            Description\r\n          </Form.Label>\r\n          <Col md=\"4\">\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows=\"3\"\r\n              value={description}\r\n              name=\"description\"\r\n              id=\"description\"\r\n              onChange={e => setDescription(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BranchForm;\r\n","import React, { Fragment } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport BranchesList from \"./BranchesList\";\r\nimport BranchForm from \"./BranchForm\";\r\nimport { IsLoggedIn } from \"../../utils/IsLoggedIn\";\r\n\r\nconst Branches = () => {\r\n  return (\r\n    <Fragment>\r\n      <IsLoggedIn />\r\n      <Switch>\r\n        <Route path=\"/branches\" exact component={BranchesList} />\r\n        <Route path=\"/branches/new\" exact component={BranchForm} />\r\n        <Route path=\"/branches/edit/:id\" exact component={BranchForm} />\r\n      </Switch>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Branches;\r\n","import kotAgent from \"../utils/API\";\r\nconst getTaxes = async params => {\r\n  const _params = {\r\n    sort_by: params.sortBy,\r\n    sort: params.sort,\r\n    page: params.page,\r\n    per_page: params.per_page\r\n  };\r\n  const endPoint = params.taxId ? \"/taxes/\" + params.taxId : \"/taxes\";\r\n  return await kotAgent.get(endPoint, { params: _params });\r\n};\r\nconst createTax = (data, props) => {\r\n  kotAgent\r\n    .post(\"/taxes\", data)\r\n    .then(response => {\r\n      props.history.push(\"/taxes\");\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\nconst updateTax = (data, props) => {\r\n  kotAgent\r\n    .put(\"/taxes/\" + props.match.params.id, data)\r\n    .then(response => {\r\n      props.history.push(\"/taxes\");\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\nconst deleteTax = (taxId, cb) => {\r\n  kotAgent\r\n    .delete(\"/taxes/\" + taxId)\r\n    .then(response => {\r\n      cb(response.data);\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport { createTax, updateTax, deleteTax, getTaxes };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Button, Table } from \"react-bootstrap\";\r\nimport { getTaxes, deleteTax } from \"../../api/taxes\";\r\nimport Paginate from \"../common/paginate\";\r\nconst TaxesList = () => {\r\n  const [state, setState] = useState({\r\n    taxes: [],\r\n    page: null,\r\n    per_page: null,\r\n    total: null\r\n  });\r\n  const makeHttpRequestWithPage = page => {\r\n    getTaxes({\r\n      taxId: null,\r\n      sortBy: \"id\",\r\n      sort: \"desc\",\r\n      page: page\r\n    }).then(res => {\r\n      setState(old => {\r\n        return {\r\n          ...old,\r\n          taxes: res.data.data.taxes,\r\n          page: res.data.data.page_context.page,\r\n          per_page: res.data.data.page_context.per_page,\r\n          total: res.data.data.page_context.total\r\n        };\r\n      });\r\n    });\r\n  };\r\n  const removeTax = taxId => {\r\n    deleteTax(taxId, cb => {\r\n      makeHttpRequestWithPage(1);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    makeHttpRequestWithPage(1);\r\n  }, []);\r\n  const renderList = () => {\r\n    if (state.taxes.length === 0)\r\n      return (\r\n        <tr>\r\n          <td colSpan=\"5\" align=\"center\">\r\n            Tax not found\r\n          </td>\r\n        </tr>\r\n      );\r\n    return state.taxes.map(tax => (\r\n      <tr key={tax.id}>\r\n        <td></td>\r\n        <td>{tax.name}</td>\r\n        <td>{tax.percentage}</td>\r\n        <td>{tax.description}</td>\r\n        <td>\r\n          <Link to={\"/taxes/edit/\" + tax.id}>Edit</Link>\r\n          <button onClick={() => removeTax(tax.id)}>Delete</button>\r\n        </td>\r\n      </tr>\r\n    ));\r\n  };\r\n  return (\r\n    <Row className=\"m-1 mt-2\">\r\n      <Col>\r\n        <h3>Tax List</h3>\r\n      </Col>\r\n      <Col>\r\n        <Link to=\"/taxes/new\">\r\n          <Button\r\n            variant=\"outline-primary\"\r\n            color=\"primary\"\r\n            className=\"float-right\"\r\n          >\r\n            New Tax\r\n          </Button>\r\n        </Link>\r\n      </Col>\r\n\r\n      <Table className=\"mt-2\" striped hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Percentage</th>\r\n            <th>Description</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{renderList()}</tbody>\r\n      </Table>\r\n      <Paginate\r\n        page={state.page}\r\n        total={state.total}\r\n        totalLength={state.taxes.length}\r\n        perPage={state.per_page}\r\n        handlePage={makeHttpRequestWithPage}\r\n      />\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default TaxesList;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { createTax, updateTax, getTaxes } from \"../../api/taxes\";\r\nconst TaxForm = props => {\r\n  const [name, setName] = useState(\"\");\r\n  const [percentage, setPercentage] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  useEffect(() => {\r\n    if (props.match.params.id) {\r\n      setIsEditMode(true);\r\n      getTaxes({\r\n        taxId: props.match.params.id\r\n      }).then(res => {\r\n        setName(res.data.data.tax.name);\r\n        setPercentage(res.data.data.tax.percentage);\r\n        setDescription(res.data.data.tax.description);\r\n      });\r\n    }\r\n  }, [props]);\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const data = {\r\n      name: name,\r\n      percentage: percentage,\r\n      description: description\r\n    };\r\n    if (isEditMode) return updateTax(data, props);\r\n    createTax(data, props);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Row className=\"mt-2 ml-3 mr-3\">\r\n        <Col>{isEditMode ? <h3>Edit Tax</h3> : <h3>New Tax</h3>}</Col>\r\n      </Row>\r\n      <Form className=\"ml-3 mr-3\" onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column md=\"2\">\r\n            Name\r\n          </Form.Label>\r\n          <Col md=\"4\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              value={name}\r\n              onChange={e => setName(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column md=\"2\">\r\n            Tax Percentage\r\n          </Form.Label>\r\n          <Col md=\"4\">\r\n            <Form.Control\r\n              value={percentage}\r\n              name=\"percentage\"\r\n              id=\"percentage\"\r\n              onChange={e => setPercentage(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column md=\"2\">\r\n            Description\r\n          </Form.Label>\r\n          <Col md=\"4\">\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows=\"3\"\r\n              value={description}\r\n              name=\"description\"\r\n              id=\"description\"\r\n              onChange={e => setDescription(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TaxForm;\r\n","import React, { Fragment } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport TaxesList from \"./TaxesList\";\r\nimport TaxForm from \"./TaxForm\";\r\nimport { IsLoggedIn } from \"../../utils/IsLoggedIn\";\r\n\r\nconst Taxes = () => {\r\n  return (\r\n    <Fragment>\r\n      <IsLoggedIn />\r\n      <Switch>\r\n        <Route path=\"/taxes\" exact component={TaxesList} />\r\n        <Route path=\"/taxes/new\" exact component={TaxForm} />\r\n        <Route path=\"/taxes/edit/:id\" exact component={TaxForm} />\r\n      </Switch>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Taxes;\r\n","import kotAgent from \"../utils/API\";\r\nconst getDesks = async params => {\r\n  const _params = {\r\n    sort_by: params.sortBy,\r\n    sort: params.sort,\r\n    page: params.page,\r\n    per_page: params.per_page\r\n  };\r\n  const endPoint = params.deskId ? \"/desks/\" + params.deskId : \"/desks\";\r\n  return await kotAgent.get(endPoint, { params: _params });\r\n};\r\nconst createDesk = (data, props) => {\r\n  kotAgent\r\n    .post(\"/desks\", data)\r\n    .then(response => {\r\n      props.history.push(\"/desks\");\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\nconst updateDesk = (data, props) => {\r\n  kotAgent\r\n    .put(\"/desks/\" + props.match.params.id, data)\r\n    .then(response => {\r\n      props.history.push(\"/desks\");\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\nconst deleteDesk = (deskId, cb) => {\r\n  kotAgent\r\n    .delete(\"/desks/\" + deskId)\r\n    .then(response => {\r\n      cb(response.data);\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport { createDesk, updateDesk, deleteDesk, getDesks };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Button, Table } from \"react-bootstrap\";\r\nimport { getDesks, deleteDesk } from \"../../api/desks\";\r\nimport Paginate from \"../common/paginate\";\r\nconst DesksList = () => {\r\n  const [state, setState] = useState({\r\n    desks: [],\r\n    page: null,\r\n    per_page: null,\r\n    total: null\r\n  });\r\n  const makeHttpRequestWithPage = page => {\r\n    getDesks({\r\n      deskId: null,\r\n      sortBy: \"id\",\r\n      sort: \"desc\",\r\n      page: page\r\n    }).then(res => {\r\n      setState(old => {\r\n        return {\r\n          ...old,\r\n          desks: res.data.data.desks,\r\n          page: res.data.data.page_context.page,\r\n          per_page: res.data.data.page_context.per_page,\r\n          total: res.data.data.page_context.total\r\n        };\r\n      });\r\n    });\r\n  };\r\n  const removeDesk = deskId => {\r\n    deleteDesk(deskId, cb => {\r\n      makeHttpRequestWithPage(1);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    makeHttpRequestWithPage(1);\r\n  }, []);\r\n  const renderList = () => {\r\n    if (state.desks.length === 0)\r\n      return (\r\n        <tr>\r\n          <td colSpan=\"5\" align=\"center\">\r\n            Desk not found\r\n          </td>\r\n        </tr>\r\n      );\r\n    return state.desks.map(desk => (\r\n      <tr key={desk.id}>\r\n        <td></td>\r\n        <td>{desk.name}</td>\r\n        <td>{desk.description}</td>\r\n        <td>\r\n          <Link to={\"/desks/edit/\" + desk.id}>Edit</Link>\r\n          <button onClick={() => removeDesk(desk.id)}>Delete</button>\r\n        </td>\r\n      </tr>\r\n    ));\r\n  };\r\n  return (\r\n    <Row className=\"m-1 mt-2\">\r\n      <Col>\r\n        <h3>Desk List</h3>\r\n      </Col>\r\n      <Col>\r\n        <Link to=\"/desks/new\">\r\n          <Button\r\n            variant=\"outline-primary\"\r\n            color=\"primary\"\r\n            className=\"float-right\"\r\n          >\r\n            New Desk\r\n          </Button>\r\n        </Link>\r\n      </Col>\r\n\r\n      <Table className=\"mt-2\" striped hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Description</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{renderList()}</tbody>\r\n      </Table>\r\n      <Paginate\r\n        page={state.page}\r\n        total={state.total}\r\n        totalLength={state.desks.length}\r\n        perPage={state.per_page}\r\n        handlePage={makeHttpRequestWithPage}\r\n      />\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default DesksList;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport { createDesk, updateDesk, getDesks } from \"../../api/desks\";\r\nimport { getBranches } from \"../../api/branches\";\r\nconst DeskForm = props => {\r\n  const [name, setName] = useState(\"\");\r\n  const [branch, setBranch] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [branchList, setBranchList] = useState([]);\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  useEffect(() => {\r\n    getBranches({}).then(res => {\r\n      setBranchList(res.data.data.branches);\r\n    });\r\n    if (props.match.params.id) {\r\n      setIsEditMode(true);\r\n      getDesks({\r\n        deskId: props.match.params.id\r\n      }).then(res => {\r\n        setName(res.data.data.desk.name);\r\n        setBranch(res.data.data.desk.branch);\r\n        setDescription(res.data.data.desk.description);\r\n      });\r\n    }\r\n  }, [props]);\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const data = {\r\n      name: name,\r\n      branch: branch,\r\n      description: description\r\n    };\r\n    console.log(data);\r\n    if (isEditMode) return updateDesk(data, props);\r\n    createDesk(data, props);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Row className=\"mt-2 ml-3 mr-3\">\r\n        <Col>{isEditMode ? <h3>Edit Desk</h3> : <h3>New Desk</h3>}</Col>\r\n      </Row>\r\n      <Form className=\"ml-3 mr-3\" onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column md=\"2\">\r\n            Name\r\n          </Form.Label>\r\n          <Col md=\"4\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              value={name}\r\n              onChange={e => setName(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column md=\"2\">\r\n            Description\r\n          </Form.Label>\r\n          <Col md=\"4\">\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows=\"3\"\r\n              value={description}\r\n              name=\"description\"\r\n              id=\"description\"\r\n              onChange={e => setDescription(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column md=\"2\">\r\n            Branch Name\r\n          </Form.Label>\r\n          <Col md=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"branch\"\r\n              id=\"branch\"\r\n              value={branch}\r\n              onChange={e => setBranch(e.target.value)}\r\n            >\r\n              <option value=\"\">Select the Branch</option>\r\n              {branchList.map(b => (\r\n                <option key={b.id} value={b.id}>\r\n                  {b.name}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default DeskForm;\r\n","import React, { Fragment } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport DesksList from \"./DesksList\";\r\nimport DeskForm from \"./DeskForm\";\r\nimport { IsLoggedIn } from \"../../utils/IsLoggedIn\";\r\nconst Desks = () => {\r\n  return (\r\n    <Fragment>\r\n      <IsLoggedIn />\r\n      <Switch>\r\n        <Route path=\"/desks\" exact component={DesksList} />\r\n        <Route path=\"/desks/new\" exact component={DeskForm} />\r\n        <Route path=\"/desks/edit/:id\" exact component={DeskForm} />\r\n      </Switch>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Desks;\r\n","import kotAgent from \"../utils/API\";\r\nconst getCategories = async params => {\r\n  const _params = {\r\n    sort_by: params.sortBy,\r\n    sort: params.sort,\r\n    page: params.page,\r\n    per_page: params.per_page\r\n  };\r\n  const endPoint = params.categoryId\r\n    ? \"/categories/\" + params.categoryId\r\n    : \"/categories\";\r\n  return await kotAgent.get(endPoint, { params: _params });\r\n};\r\nconst createCategory = (data, props) => {\r\n  kotAgent\r\n    .post(\"/categories\", data)\r\n    .then(response => {\r\n      props.history.push(\"/categories\");\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\nconst updateCategory = (data, props) => {\r\n  kotAgent\r\n    .put(\"/categories/\" + props.match.params.id, data)\r\n    .then(response => {\r\n      props.history.push(\"/categories\");\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\nconst deleteCategory = (categoryId, cb) => {\r\n  kotAgent\r\n    .delete(\"/categories/\" + categoryId)\r\n    .then(response => {\r\n      cb(response.data);\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport { createCategory, updateCategory, deleteCategory, getCategories };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Button, Table } from \"react-bootstrap\";\r\nimport { getCategories, deleteCategory } from \"../../api/categories\";\r\nimport Paginate from \"../common/paginate\";\r\n\r\nconst CategoriesList = () => {\r\n  const [state, setState] = useState({\r\n    categories: [],\r\n    page: null,\r\n    per_page: null,\r\n    total: null\r\n  });\r\n  const makeHttpRequestWithPage = page => {\r\n    getCategories({\r\n      categoryId: null,\r\n      sortBy: \"id\",\r\n      sort: \"desc\",\r\n      page: page\r\n    }).then(res => {\r\n      setState(old => {\r\n        return {\r\n          ...old,\r\n          categories: res.data.data.categories,\r\n          page: res.data.data.page_context.page,\r\n          per_page: res.data.data.page_context.per_page,\r\n          total: res.data.data.page_context.total\r\n        };\r\n      });\r\n    });\r\n  };\r\n  const removeCategory = categoryId => {\r\n    deleteCategory(categoryId, cb => {\r\n      makeHttpRequestWithPage(1);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    makeHttpRequestWithPage(1);\r\n  }, []);\r\n  const renderList = () => {\r\n    if (state.categories.length === 0)\r\n      return (\r\n        <tr>\r\n          <td colSpan=\"5\" align=\"center\">\r\n            Category not found\r\n          </td>\r\n        </tr>\r\n      );\r\n    return state.categories.map(category => (\r\n      <tr key={category.id}>\r\n        <td></td>\r\n        <td>{category.name}</td>\r\n        <td>{category.description}</td>\r\n        <td>\r\n          <Link to={\"/categories/edit/\" + category.id}>Edit</Link>\r\n          <button onClick={() => removeCategory(category.id)}>Delete</button>\r\n        </td>\r\n      </tr>\r\n    ));\r\n  };\r\n  return (\r\n    <Row className=\"m-1 mt-2\">\r\n      <Col>\r\n        <h3>Category List</h3>\r\n      </Col>\r\n      <Col>\r\n        <Link to=\"/categories/new\">\r\n          <Button\r\n            variant=\"outline-primary\"\r\n            color=\"primary\"\r\n            className=\"float-right\"\r\n          >\r\n            New Category\r\n          </Button>\r\n        </Link>\r\n      </Col>\r\n\r\n      <Table className=\"mt-2\" striped hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Description</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{renderList()}</tbody>\r\n      </Table>\r\n      <Paginate\r\n        page={state.page}\r\n        total={state.total}\r\n        totalLength={state.categories.length}\r\n        perPage={state.per_page}\r\n        handlePage={makeHttpRequestWithPage}\r\n      />\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CategoriesList;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport {\r\n  createCategory,\r\n  updateCategory,\r\n  getCategories\r\n} from \"../../api/categories\";\r\nconst CategoryForm = props => {\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  useEffect(() => {\r\n    if (props.match.params.id) {\r\n      setIsEditMode(true);\r\n      getCategories({\r\n        branchId: props.match.params.id\r\n      }).then(res => {\r\n        setName(res.data.data.branch.name);\r\n        setDescription(res.data.data.branch.description);\r\n      });\r\n    }\r\n  }, [props]);\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const data = {\r\n      name: name,\r\n      description: description\r\n    };\r\n    if (isEditMode) return updateCategory(data, props);\r\n    createCategory(data, props);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Row className=\"mt-2 ml-3 mr-3\">\r\n        <Col>{isEditMode ? <h3>Edit Category</h3> : <h3>New Category</h3>}</Col>\r\n      </Row>\r\n      <Form className=\"ml-3 mr-3\" onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column md=\"2\">\r\n            Name\r\n          </Form.Label>\r\n          <Col md=\"4\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              value={name}\r\n              onChange={e => setName(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column md=\"2\">\r\n            Description\r\n          </Form.Label>\r\n          <Col md=\"4\">\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows=\"3\"\r\n              value={description}\r\n              name=\"description\"\r\n              id=\"description\"\r\n              onChange={e => setDescription(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CategoryForm;\r\n","import React, { Fragment } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport CategoriesList from \"./CategoriesList\";\r\nimport CategoryForm from \"./CategoryForm\";\r\nimport { IsLoggedIn } from \"../../utils/IsLoggedIn\";\r\nconst Categories = () => {\r\n  return (\r\n    <Fragment>\r\n      <IsLoggedIn />\r\n      <Switch>\r\n        <Route path=\"/categories\" exact component={CategoriesList} />\r\n        <Route path=\"/categories/new\" exact component={CategoryForm} />\r\n        <Route path=\"/categories/edit/:id\" exact component={CategoryForm} />\r\n      </Switch>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import kotAgent from \"../utils/API\";\r\nimport { decodeJWT } from \"../utils/helper\";\r\nconst _decodeJWT = decodeJWT();\r\nconst getFoodMenus = async params => {\r\n  const _params = {\r\n    sort_by: params.sortBy,\r\n    sort: params.sort,\r\n    page: params.page,\r\n    per_page: params.per_page\r\n  };\r\n  if (_decodeJWT.is_root_admin) _params[\"branch_id\"] = _decodeJWT.branch;\r\n  const endPoint = params.foodMenuId\r\n    ? \"/food_menus/\" + params.foodMenuId\r\n    : \"/food_menus\";\r\n  return await kotAgent.get(endPoint, { params: _params });\r\n};\r\nconst createFoodMenu = (data, props) => {\r\n  kotAgent\r\n    .post(\"/food_menus\", data)\r\n    .then(response => {\r\n      props.history.push(\"/foodmenus\");\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\nconst updateFoodMenu = (data, props) => {\r\n  kotAgent\r\n    .put(\"/food_menus/\" + props.match.params.id, data)\r\n    .then(response => {\r\n      props.history.push(\"/foodmenus\");\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\nconst deleteFoodMenu = (foodMenuId, cb) => {\r\n  kotAgent\r\n    .delete(\"/food_menus/\" + foodMenuId)\r\n    .then(response => {\r\n      cb(response.data);\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport { createFoodMenu, updateFoodMenu, deleteFoodMenu, getFoodMenus };\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"axios\";\r\nimport kotAgent from \"../utils/API\";\r\nexport const updateFoodMenus = payload => {\r\n  return {\r\n    type: actionTypes.GET_FOOD_MENUS,\r\n    payload\r\n  };\r\n};\r\nexport const updateAllFoodMenus = payload => {\r\n  return {\r\n    type: actionTypes.GET_ALL_FOOD_MENUS,\r\n    payload\r\n  };\r\n};\r\nexport const fetchFoodMenus = params => async dispatch => {\r\n  const _params = {\r\n    sort_by: params.sortBy,\r\n    sort: params.sort,\r\n    page: params.page,\r\n    per_page: params.per_page\r\n  };\r\n  const endPoint = params.foodMenuId\r\n    ? \"/food_menus/\" + params.foodMenuId\r\n    : \"/food_menus\";\r\n  return kotAgent\r\n    .get(endPoint, { params: _params })\r\n    .then(response => {\r\n      console.log(response);\r\n      const res = {\r\n        foodMenus: response.data.data.food_menus,\r\n        page: response.data.data.page_context.page,\r\n        per_page: response.data.data.page_context.per_page,\r\n        total: response.data.data.page_context.total\r\n      };\r\n      dispatch(updateFoodMenus(res));\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n};\r\nexport const fetchAllFoodMenus = params => dispatch => {\r\n  kotAgent\r\n    .get(\"/food_menus\")\r\n    .then(response => {\r\n      dispatch(\r\n        updateAllFoodMenus({\r\n          foodMenus: response.data.data.food_menus,\r\n          total: response.data.data.page_context.total\r\n        })\r\n      );\r\n    })\r\n    .catch(error => {});\r\n};\r\n","// Food Menus\r\nexport const GET_FOOD_MENUS = \"GET_FOOD_MENUS\";\r\nexport const GET_ALL_FOOD_MENUS = \"GET_ALL_FOOD_MENUS\";\r\nexport const CREATE_FOOD_MENU = \"CREATE_FOOD_MENU\";\r\nexport const UPDATE_FOOD_MENU = \"UPDATE_FOOD_MENU\";\r\nexport const DELETE_FOOD_MENU = \"DELETE_FOOD_MENU\";\r\n\r\nexport const GET_ALL_KITCHEN_ORDERS = \"GET_ALL_KITCHEN_ORDERS\";\r\nexport const UPDATE_ON_GOING_FOOD_MENU_ORDER =\r\n  \"UPDATE_ON_GOING_FOOD_MENU_ORDER\";\r\nexport const ADD_ON_GOING_FOOD_MENU_ORDER = \"ADD_ON_GOING_FOOD_MENU_ORDER\";\r\nexport const ADD_SERVED_FOOD_MENU_ORDER = \"ADD_SERVED_FOOD_MENU_ORDER\";\r\nexport const CANCEL_ON_GOING_FOOD_MENU_ORDER =\r\n  \"CANCEL_ON_GOING_FOOD_MENU_ORDER\";\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Col, Button, Table, Image } from \"react-bootstrap\";\r\nimport { getFoodMenus, deleteFoodMenu } from \"../../api/foodMenus\";\r\nimport Paginate from \"../common/paginate\";\r\nimport { fetchFoodMenus, fetchAllFoodMenus } from \"../../actions/foodMenus\";\r\n\r\nconst FoodMenusList = props => {\r\n  fetchFoodMenus({\r\n    foodMenuId: null,\r\n    sortBy: \"id\",\r\n    sort: \"desc\",\r\n    page: 1,\r\n    perPage: 3\r\n  });\r\n  const {\r\n    page,\r\n    total,\r\n    perPage,\r\n    foodMenus,\r\n    rFetchFoodMenus,\r\n    rFetchAllFoodMenus\r\n  } = props;\r\n  const removeFoodMenu = foodMenuId => {\r\n    deleteFoodMenu(foodMenuId, cb => {\r\n      rFetchFoodMenus(1);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    rFetchFoodMenus(1);\r\n  }, []);\r\n  const renderList = () => {\r\n    if (foodMenus.length === 0)\r\n      return (\r\n        <tr>\r\n          <td colSpan=\"5\" align=\"center\">\r\n            FoodMenu not found\r\n          </td>\r\n        </tr>\r\n      );\r\n    return foodMenus.map(foodMenu => (\r\n      <tr key={foodMenu.id}>\r\n        <td>\r\n          {\" \"}\r\n          <Image src={foodMenu.file_url} width=\"50\" height=\"50\" roundedCircle />\r\n        </td>\r\n        <td>\r\n          {foodMenu.name}\r\n          {foodMenu.branch}\r\n        </td>\r\n        <td>{foodMenu.base_price}</td>\r\n        <td>{foodMenu.description}</td>\r\n        <td>\r\n          <Link to={\"/foodmenus/edit/\" + foodMenu.id}>Edit</Link>\r\n          <button onClick={() => removeFoodMenu(foodMenu.id)}>Delete</button>\r\n        </td>\r\n      </tr>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <Row className=\"m-1 mt-2\">\r\n      <Col>\r\n        <h3>Food Menu List</h3>\r\n      </Col>\r\n      <Col>\r\n        <Link to=\"/foodmenus/new\">\r\n          <Button\r\n            variant=\"outline-primary\"\r\n            color=\"primary\"\r\n            className=\"float-right\"\r\n          >\r\n            New Food Menu\r\n          </Button>\r\n        </Link>\r\n      </Col>\r\n\r\n      <Table className=\"mt-2\" striped hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Price</th>\r\n            <th>Description</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{renderList()}</tbody>\r\n      </Table>\r\n      <Paginate\r\n        page={page}\r\n        total={total}\r\n        totalLength={foodMenus.length}\r\n        perPage={perPage}\r\n        handlePage={rFetchFoodMenus}\r\n      />\r\n    </Row>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    foodMenus: state.rsFoodMenu.foodMenuPaginationList.resultSet || [],\r\n    page: state.rsFoodMenu.foodMenuPaginationList.meta.currentPage,\r\n    perPage: state.rsFoodMenu.foodMenuPaginationList.meta.perPage,\r\n    total: state.rsFoodMenu.foodMenuPaginationList.meta.totalRecords\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    rFetchFoodMenus: page => {\r\n      dispatch(\r\n        fetchFoodMenus({\r\n          foodMenuId: null,\r\n          sortBy: \"id\",\r\n          sort: \"desc\",\r\n          page: page,\r\n          perPage: 10\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FoodMenusList);\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Row, Col, Form, Button, Image } from \"react-bootstrap\";\r\nimport {\r\n  createFoodMenu,\r\n  updateFoodMenu,\r\n  getFoodMenus\r\n} from \"../../api/foodMenus\";\r\nimport { getBranches } from \"../../api/branches\";\r\nimport { getTaxes } from \"../../api/taxes\";\r\nimport { getCategories } from \"../../api/categories\";\r\nimport { decodeJWT } from \"../../utils/helper\";\r\nconst FoodMenuForm = props => {\r\n  const _decodeJWT = decodeJWT();\r\n  const defaultBranch = _decodeJWT.branch;\r\n  const isRootAdmin = _decodeJWT.is_root_admin;\r\n  const [name, setName] = useState(\"\");\r\n  const [basePrice, setBasePrice] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [branch, setBranch] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [tax, setTax] = useState(\"\");\r\n  const [taxList, setTaxList] = useState([]);\r\n  const [categoryList, setCategoryList] = useState([]);\r\n  const [branchList, setBranchList] = useState([]);\r\n  const [selectedFile, setSelectedFile] = useState({\r\n    fileUrl: null,\r\n    isLoaded: false\r\n  });\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  useEffect(() => {\r\n    getBranches({}).then(res => {\r\n      setBranchList(res.data.data.branches);\r\n    });\r\n    getTaxes({}).then(res => {\r\n      setTaxList(res.data.data.taxes);\r\n    });\r\n    getCategories({}).then(res => {\r\n      setCategoryList(res.data.data.categories);\r\n    });\r\n    if (props.match.params.id) {\r\n      setIsEditMode(true);\r\n      getFoodMenus({\r\n        foodMenuId: props.match.params.id\r\n      }).then(res => {\r\n        setName(res.data.data.food_menu.name);\r\n        setBasePrice(res.data.data.food_menu.base_price);\r\n        setCategory(res.data.data.food_menu.category);\r\n        setTax(res.data.data.food_menu.tax);\r\n        setBranch(res.data.data.food_menu.branch);\r\n        setDescription(res.data.data.food_menu.description);\r\n        setSelectedFile({\r\n          fileUrl: res.data.data.food_menu.file_url,\r\n          isLoaded: false\r\n        });\r\n      });\r\n    }\r\n  }, [props]);\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const data = new FormData();\r\n    if (selectedFile.isLoaded) data.append(\"file_url\", selectedFile.fileUrl);\r\n    data.append(\"name\", name);\r\n    data.append(\"branch\", branch);\r\n    data.append(\"base_price\", basePrice);\r\n    data.append(\"category\", category);\r\n    data.append(\"tax\", tax);\r\n    data.append(\"branch\", isRootAdmin ? branch : defaultBranch);\r\n    data.append(\"description\", description);\r\n    console.log(branch);\r\n    // const data = {\r\n    //   name: name,\r\n    //   branch: branch,\r\n    //   base_price: basePrice,\r\n    //   category: category,\r\n    //   tax: tax,\r\n    //   description: description\r\n    // };\r\n    if (isEditMode) return updateFoodMenu(data, props);\r\n    createFoodMenu(data, props);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Row className=\"mt-2 ml-3 mr-3\">\r\n        <Col>\r\n          {isEditMode ? <h3>Edit Food Menu</h3> : <h3>New Food Menu</h3>}\r\n        </Col>\r\n      </Row>\r\n      <Form className=\"ml-3 mr-3\" onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column md=\"2\">\r\n            Category\r\n          </Form.Label>\r\n          <Col md=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"category\"\r\n              id=\"category\"\r\n              value={category}\r\n              onChange={e => setCategory(e.target.value)}\r\n            >\r\n              <option value=\"\">Select the Category</option>\r\n              {categoryList.map(b => (\r\n                <option key={b.id} value={b.id}>\r\n                  {b.name}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column md=\"2\">\r\n            Name\r\n          </Form.Label>\r\n          <Col md=\"4\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              value={name}\r\n              onChange={e => setName(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column md=\"2\">\r\n            Base Price\r\n          </Form.Label>\r\n          <Col md=\"4\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"basePrice\"\r\n              id=\"basePrice\"\r\n              value={basePrice}\r\n              onChange={e => setBasePrice(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column md=\"2\">\r\n            Tax\r\n          </Form.Label>\r\n          <Col md=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"tax\"\r\n              id=\"tax\"\r\n              value={tax}\r\n              onChange={e => setTax(e.target.value)}\r\n            >\r\n              <option value=\"\">Select the Tax</option>\r\n              {taxList.map(b => (\r\n                <option key={b.id} value={b.id}>\r\n                  {b.name}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column md=\"2\">\r\n            Branch\r\n          </Form.Label>\r\n          <Col md=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"branch\"\r\n              id=\"branch\"\r\n              value={branch}\r\n              onChange={e => setBranch(e.target.value)}\r\n            >\r\n              {isRootAdmin\r\n                ? branchList.map(b => {\r\n                    return (\r\n                      <Fragment>\r\n                        <option key={b.id} value={b.id}>\r\n                          {b.name}\r\n                        </option>\r\n                      </Fragment>\r\n                    );\r\n                  })\r\n                : branchList.map(b => {\r\n                    if (defaultBranch === b.id)\r\n                      return (\r\n                        <Fragment>\r\n                          <option key={b.id} value={b.id}>\r\n                            {b.name}\r\n                          </option>\r\n                        </Fragment>\r\n                      );\r\n                    return null;\r\n                  })}\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column md=\"2\">\r\n            Description\r\n          </Form.Label>\r\n          <Col md=\"4\">\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows=\"3\"\r\n              value={description}\r\n              name=\"description\"\r\n              id=\"description\"\r\n              onChange={e => setDescription(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column md=\"2\">\r\n            FoodMenu Image\r\n          </Form.Label>\r\n          <Col md=\"4\">\r\n            <input\r\n              type=\"file\"\r\n              name=\"file_url\"\r\n              onChange={e =>\r\n                setSelectedFile({ fileUrl: e.target.files[0], isLoaded: true })\r\n              }\r\n            />\r\n            {isEditMode && selectedFile.isLoaded === false ? (\r\n              <Image\r\n                src={selectedFile.fileUrl}\r\n                width=\"50\"\r\n                height=\"50\"\r\n                roundedCircle\r\n              />\r\n            ) : null}\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default FoodMenuForm;\r\n","import React, { Fragment } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport FoodMenusList from \"./FoodMenusList\";\r\nimport FoodMenuForm from \"./FoodMenuForm\";\r\nimport { IsLoggedIn } from \"../../utils/IsLoggedIn\";\r\n\r\nconst FoodMenus = () => {\r\n  return (\r\n    <Fragment>\r\n      <IsLoggedIn />\r\n      <Switch>\r\n        <Route path=\"/foodmenus\" exact component={FoodMenusList} />\r\n        <Route path=\"/foodmenus/new\" exact component={FoodMenuForm} />\r\n        <Route path=\"/foodmenus/edit/:id\" exact component={FoodMenuForm} />\r\n      </Switch>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default FoodMenus;\r\n","import kotAgent from \"../utils/API\";\r\nimport { toast } from \"react-toastify\";\r\nconst getOrders = async params => {\r\n  const _params = {\r\n    sort_by: params.sortBy,\r\n    sort: params.sort,\r\n    page: params.page,\r\n    per_page: params.per_page\r\n  };\r\n  const endPoint = params.orderId\r\n    ? \"/web_orders/\" + params.orderId\r\n    : \"/web_orders\";\r\n  return await kotAgent.get(endPoint, { params: _params });\r\n};\r\nconst createOrder = (data, cb) => {\r\n  kotAgent\r\n    .post(\"/web_orders\", data)\r\n    .then(response => {\r\n      cb(response.data);\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\nconst updateOrder = (data, id, cb) => {\r\n  kotAgent\r\n    .put(\"/web_orders/\" + id, data)\r\n    .then(response => {\r\n      cb(response.data);\r\n      toast.success(response.data.message);\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\nconst deleteOrder = (orderId, cb) => {\r\n  kotAgent\r\n    .delete(\"/web_orders/\" + orderId)\r\n    .then(response => {\r\n      cb(response.data);\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport { createOrder, updateOrder, deleteOrder, getOrders };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Button, Table } from \"react-bootstrap\";\r\nimport { getOrders, deleteOrder } from \"../../api/orders\";\r\nimport { formatDate } from \"../../utils/helper\";\r\nimport Paginate from \"../common/paginate\";\r\n\r\nconst OrdersList = () => {\r\n  const [state, setState] = useState({\r\n    orders: [],\r\n    page: null,\r\n    per_page: null,\r\n    total: null\r\n  });\r\n  const makeHttpRequestWithPage = page => {\r\n    getOrders({\r\n      orderId: null,\r\n      sortBy: \"id\",\r\n      sort: \"desc\",\r\n      page: page\r\n    }).then(res => {\r\n      setState(old => {\r\n        return {\r\n          ...old,\r\n          orders: res.data.data.orders,\r\n          page: res.data.data.page_context.page,\r\n          per_page: res.data.data.page_context.per_page,\r\n          total: res.data.data.page_context.total\r\n        };\r\n      });\r\n    });\r\n  };\r\n  const removeOrder = orderId => {\r\n    deleteOrder(orderId, cb => {\r\n      makeHttpRequestWithPage(1);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    makeHttpRequestWithPage(1);\r\n  }, []);\r\n  const renderList = () => {\r\n    if (state.orders.length === 0)\r\n      return (\r\n        <tr>\r\n          <td colSpan=\"5\" align=\"center\">\r\n            Order not found\r\n          </td>\r\n        </tr>\r\n      );\r\n    return state.orders.map(order => (\r\n      <tr key={order.id}>\r\n        <td>{formatDate(order.order_placed_date)}</td>\r\n        <td>{order.order_no}</td>\r\n        <td align=\"right\">{order.sub_total}</td>\r\n        <td>\r\n          <Link to={\"/orders/edit/\" + order.id}>\r\n            <button className=\"btn btn-info\">Edit</button>\r\n          </Link>\r\n          <Link className=\"ml-1\" to={\"/invoices/new?order=\" + order.id}>\r\n            <button className=\"btn btn-success\">Make Invoice</button>\r\n          </Link>\r\n          {/* <button onClick={() => removeOrder(order.id)}>Delete</button> */}\r\n        </td>\r\n      </tr>\r\n    ));\r\n  };\r\n  return (\r\n    <Row className=\"m-1 mt-2\">\r\n      <Col>\r\n        <h3>Order List</h3>\r\n      </Col>\r\n      <Col>\r\n        <Link to=\"/orders/new\">\r\n          <Button\r\n            variant=\"outline-primary\"\r\n            color=\"primary\"\r\n            className=\"float-right\"\r\n          >\r\n            New Order\r\n          </Button>\r\n        </Link>\r\n      </Col>\r\n      <Table className=\"mt-2\" striped hover>\r\n        <thead>\r\n          <tr>\r\n            <th width=\"30%\">Date</th>\r\n            <th width=\"10%\">Order #</th>\r\n            <th width=\"30%\" style={{ textAlign: \"right\" }}>\r\n              Sub Total\r\n            </th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{renderList()}</tbody>\r\n      </Table>\r\n      <Paginate\r\n        page={state.page}\r\n        total={state.total}\r\n        totalLength={state.orders.length}\r\n        perPage={state.per_page}\r\n        handlePage={makeHttpRequestWithPage}\r\n      />\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default OrdersList;\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMinusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { connect } from \"react-redux\";\r\nconst FoodMenuLineItem = props => {\r\n  const {\r\n    idx,\r\n    foodMenuItem,\r\n    handleDynamicInput,\r\n    handleRemoveLineItem,\r\n    foodMenusList\r\n  } = props;\r\n  const updateLineItemPrice = e => {\r\n    const foodMenuFilter = [...foodMenusList];\r\n    foodMenuFilter.forEach(i => {\r\n      if (i.id.toString() === e.target.value) {\r\n        handleDynamicInput(e, i.base_price);\r\n      }\r\n    });\r\n  };\r\n  useEffect(() => {}, []);\r\n  const _foodMenu = `foodMenu-${idx}`;\r\n  const _quantity = `quantity-${idx}`;\r\n  const _unit_price = `unit_price-${idx}`;\r\n  return (\r\n    <Fragment>\r\n      <tr>\r\n        <td>\r\n          <Form.Control\r\n            as=\"select\"\r\n            name={_foodMenu}\r\n            id={_foodMenu}\r\n            value={foodMenuItem.food_menu}\r\n            data-idx={idx}\r\n            data-attr=\"food_menu\"\r\n            onChange={e => {\r\n              updateLineItemPrice(e);\r\n            }}\r\n          >\r\n            <option value=\"\">Select the Food Menu</option>\r\n            {foodMenusList.map(f => (\r\n              <option key={f.id} value={f.id}>\r\n                {f.name}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </td>\r\n        <td>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name={_quantity}\r\n            id={_quantity}\r\n            value={foodMenuItem.quantity}\r\n            data-idx={idx}\r\n            data-attr=\"quantity\"\r\n            onChange={e => handleDynamicInput(e)}\r\n            autoComplete=\"off\"\r\n          ></Form.Control>\r\n        </td>\r\n        <td>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name={_unit_price}\r\n            id={_unit_price}\r\n            value={foodMenuItem.unit_price}\r\n            data-idx={idx}\r\n            data-attr=\"unit_price\"\r\n            onChange={e => handleDynamicInput(e)}\r\n            autoComplete=\"off\"\r\n          ></Form.Control>\r\n        </td>\r\n        <td>\r\n          <span onClick={() => handleRemoveLineItem(idx)}>\r\n            <FontAwesomeIcon icon={faMinusCircle} />\r\n          </span>\r\n        </td>\r\n      </tr>\r\n    </Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    foodMenusList: state.rsFoodMenu.foodMenuAllList.resultSet || []\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(FoodMenuLineItem);\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Row, Col, Form, Button, Table } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { createOrder, updateOrder, getOrders } from \"../../api/orders\";\r\nimport FoodMenuLineItem from \"../foodMenus/FoodMenuLineItem\";\r\nimport { toast } from \"react-toastify\";\r\nimport { fetchAllFoodMenus } from \"../../actions/foodMenus\";\r\nconst OrderForm = props => {\r\n  const [subTotal, setSubTotal] = useState(0.0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const blankFoodMenu = { id: \"\", food_menu: \"\", quantity: \"\", unit_price: \"\" };\r\n  const [foodMenuState, setFoodMenuState] = useState([{ ...blankFoodMenu }]);\r\n  const handleDynamicInput = (e, menuPrice = null) => {\r\n    const updatedFoodMenus = [...foodMenuState];\r\n    updatedFoodMenus[e.target.dataset.idx][e.target.dataset.attr] =\r\n      e.target.value;\r\n    if (menuPrice) {\r\n      updatedFoodMenus[e.target.dataset.idx][\"unit_price\"] = menuPrice;\r\n    }\r\n    setFoodMenuState(updatedFoodMenus);\r\n    calcSubTotal();\r\n  };\r\n  const handleRemoveLineItem = id => {\r\n    const updatedFoodMenus = [...foodMenuState];\r\n    if (updatedFoodMenus.length > 1) {\r\n      const filteredOrderFoodMenus = updatedFoodMenus.filter((f, index) => {\r\n        if (index !== id) {\r\n          return { ...f };\r\n        }\r\n      });\r\n      setFoodMenuState(filteredOrderFoodMenus);\r\n    } else {\r\n      toast.warn(\"Atleast one item is required!\");\r\n    }\r\n  };\r\n  const addFoodMenu = () => {\r\n    setFoodMenuState([...foodMenuState, { ...blankFoodMenu }]);\r\n  };\r\n  const calcSubTotal = data => {\r\n    const foodMenuStateData = data ? data : [...foodMenuState];\r\n    let sumSubTotal = 0;\r\n    foodMenuStateData.map(\r\n      i =>\r\n        (sumSubTotal +=\r\n          parseFloat(i.quantity ? i.quantity : 0) *\r\n          parseFloat(i.unit_price ? i.unit_price : 0))\r\n    );\r\n    setSubTotal(sumSubTotal);\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.rFetchAllFoodMenus();\r\n    if (props.match.params.id) {\r\n      setIsEditMode(true);\r\n      getOrders({\r\n        orderId: props.match.params.id\r\n      }).then(res => {\r\n        setDescription(res.data.data.order.description);\r\n        const orderFoodMenus = res.data.data.order.order_food_menus;\r\n        const mappedOrderFoodMenus = orderFoodMenus.map(orderFoodMenu => {\r\n          return {\r\n            id: orderFoodMenu.id,\r\n            food_menu: orderFoodMenu.food_menu,\r\n            quantity: orderFoodMenu.quantity,\r\n            unit_price: orderFoodMenu.unit_price\r\n          };\r\n        });\r\n        setFoodMenuState(mappedOrderFoodMenus);\r\n        calcSubTotal(mappedOrderFoodMenus);\r\n      });\r\n    }\r\n    // console.log(\"dm\");\r\n  }, [props]);\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const data = {\r\n      // order_placed_date: orderDate,\r\n      description: description,\r\n      line_items: foodMenuState\r\n    };\r\n    if (isEditMode) {\r\n      updateOrder(data, props.match.params.id, cb => {\r\n        if (cb) {\r\n          props.history.push(\"/orders\");\r\n        }\r\n      });\r\n    } else {\r\n      createOrder(data, cb => {\r\n        if (cb) {\r\n          props.history.push(\"/orders\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Row className=\"mt-2 ml-3 mr-3\">\r\n        {isEditMode ? <h3>Edit Order</h3> : <h3>New Order</h3>}\r\n      </Row>\r\n      <hr />\r\n      <Form className=\"ml-3 mr-3\" onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column md=\"2\">\r\n            Description\r\n          </Form.Label>\r\n          <Col md=\"4\">\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows=\"3\"\r\n              value={description ? description : \"\"}\r\n              name=\"description\"\r\n              id=\"description\"\r\n              onChange={e => setDescription(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Table className=\"mt-2\">\r\n          <thead>\r\n            <tr>\r\n              <th>Food Menu</th>\r\n              <th>Quantity</th>\r\n              <th>Price</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {foodMenuState.map((result, idx) => {\r\n              return (\r\n                <FoodMenuLineItem\r\n                  idx={idx}\r\n                  key={idx}\r\n                  foodMenuItem={result}\r\n                  handleDynamicInput={handleDynamicInput}\r\n                  handleRemoveLineItem={handleRemoveLineItem}\r\n                />\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n        <Table>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <Button\r\n                  variant=\"secondary\"\r\n                  className=\"btn-sm\"\r\n                  onClick={addFoodMenu}\r\n                >\r\n                  Add new row\r\n                </Button>\r\n              </td>\r\n              <td align=\"right\">\r\n                <h2>\r\n                  <b>Sub Total : {subTotal}</b>\r\n                </h2>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </Fragment>\r\n  );\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    rFetchAllFoodMenus: () => {\r\n      dispatch(fetchAllFoodMenus({}));\r\n    }\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(OrderForm);\r\n","import React, { Fragment } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport OrdersList from \"./OrdersList\";\r\nimport OrderForm from \"./OrderForm\";\r\nimport { IsLoggedIn } from \"../../utils/IsLoggedIn\";\r\nconst Orders = () => {\r\n  return (\r\n    <Fragment>\r\n      <IsLoggedIn />\r\n      <Switch>\r\n        <Route path=\"/orders\" exact component={OrdersList} />\r\n        <Route path=\"/orders/new\" exact component={OrderForm} />\r\n        <Route path=\"/orders/edit/:id\" exact component={OrderForm} />\r\n      </Switch>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","import kotAgent from \"../utils/API\";\r\nconst getInvoices = async params => {\r\n  const _params = {\r\n    sort_by: params.sortBy,\r\n    sort: params.sort,\r\n    page: params.page,\r\n    per_page: params.per_page\r\n  };\r\n  const endPoint = params.invoiceId\r\n    ? \"/invoices/\" + params.invoiceId\r\n    : \"/invoices\";\r\n  return await kotAgent.get(endPoint, { params: _params });\r\n};\r\nconst createInvoice = (data, props) => {\r\n  kotAgent\r\n    .post(\"/invoices\", data)\r\n    .then(response => {\r\n      props.history.push(\"/invoices\");\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\nconst updateInvoice = (data, props) => {\r\n  kotAgent\r\n    .put(\"/invoices/\" + props.match.params.id, data)\r\n    .then(response => {\r\n      props.history.push(\"/invoices\");\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\nconst deleteInvoice = (invoiceId, cb) => {\r\n  kotAgent\r\n    .delete(\"/invoices/\" + invoiceId)\r\n    .then(response => {\r\n      cb(response.data);\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport { createInvoice, updateInvoice, deleteInvoice, getInvoices };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Button, Table } from \"react-bootstrap\";\r\nimport { getInvoices, deleteInvoice } from \"../../api/invoices\";\r\nimport { formatDate } from \"../../utils/helper\";\r\nimport Paginate from \"../common/paginate\";\r\nconst InvoicesList = () => {\r\n  const [state, setState] = useState({\r\n    invoices: [],\r\n    page: null,\r\n    per_page: null,\r\n    total: null\r\n  });\r\n  const makeHttpRequestWithPage = page => {\r\n    getInvoices({\r\n      invoiceId: null,\r\n      sortBy: \"id\",\r\n      sort: \"desc\",\r\n      page: page\r\n    }).then(res => {\r\n      setState(old => {\r\n        return {\r\n          ...old,\r\n          invoices: res.data.data.invoices,\r\n          page: res.data.data.page_context.page,\r\n          per_page: res.data.data.page_context.per_page,\r\n          total: res.data.data.page_context.total\r\n        };\r\n      });\r\n    });\r\n  };\r\n  const removeInvoice = invoiceId => {\r\n    deleteInvoice(invoiceId, cb => {\r\n      makeHttpRequestWithPage(1);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    makeHttpRequestWithPage(1);\r\n  }, []);\r\n  const renderList = () => {\r\n    if (state.invoices.length === 0)\r\n      return (\r\n        <tr>\r\n          <td colSpan=\"5\" align=\"center\">\r\n            Invoice not found\r\n          </td>\r\n        </tr>\r\n      );\r\n    return state.invoices.map(invoice => (\r\n      <tr key={invoice.id}>\r\n        <td>{formatDate(invoice.invoice_date)}</td>\r\n        <td>{invoice.invoice_no}</td>\r\n        <td align=\"right\">{invoice.sub_total}</td>\r\n        <td>{invoice.description}</td>\r\n        <td>{invoice.paid_amount === invoice.net_total ? \"Paid\" : \"Draft\"}</td>\r\n        <td>\r\n          <Link to={\"/invoices/edit/\" + invoice.id}>\r\n            <button className=\"btn btn-info\">Edit</button>\r\n          </Link>\r\n          {/* <button onClick={() => removeOrder(order.id)}>Delete</button> */}\r\n        </td>\r\n      </tr>\r\n    ));\r\n  };\r\n  return (\r\n    <Row className=\"m-1 mt-2\">\r\n      <Col>\r\n        <h3>Invoice List</h3>\r\n      </Col>\r\n      <Col>\r\n        <Link to=\"/invoices/new\">\r\n          <Button\r\n            variant=\"outline-primary\"\r\n            color=\"primary\"\r\n            className=\"float-right\"\r\n          >\r\n            New Invoice\r\n          </Button>\r\n        </Link>\r\n      </Col>\r\n\r\n      <Table className=\"mt-2\" striped hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Invoice #</th>\r\n            <th style={{ textAlign: \"right\" }}>Sub Total</th>\r\n            <th>Description</th>\r\n            <th>Status</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{renderList()}</tbody>\r\n      </Table>\r\n      <Paginate\r\n        page={state.page}\r\n        total={state.total}\r\n        totalLength={state.invoices.length}\r\n        perPage={state.per_page}\r\n        handlePage={makeHttpRequestWithPage}\r\n      />\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default InvoicesList;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Row, Col, Form, Button, Table } from \"react-bootstrap\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { createInvoice, updateInvoice, getInvoices } from \"../../api/invoices\";\r\nimport { getUsers } from \"../../api/users\";\r\nimport { getOrders } from \"../../api/orders\";\r\nimport { fetchAllFoodMenus } from \"../../actions/foodMenus\";\r\nimport FoodMenuLineItem from \"../foodMenus/FoodMenuLineItem\";\r\nimport { toast } from \"react-toastify\";\r\nconst useQuery = () => {\r\n  return new URLSearchParams(useLocation().search);\r\n};\r\nconst InvoiceForm = props => {\r\n  let query = useQuery();\r\n  const [invoiceForId, setInvoiceForId] = useState(\"\");\r\n  const [paymentMode, setPaymentMode] = useState(\"\");\r\n  const [paidAmount, setPaidAmount] = useState(\"\");\r\n  const [paymentDescription, setPaymentDescription] = useState(\"\");\r\n  const [userList, setUserList] = useState([]);\r\n  const [subTotal, setSubTotal] = useState(0.0);\r\n  const [orderNo, setOrderNo] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const blankFoodMenu = { id: \"\", food_menu: \"\", quantity: \"\", unit_price: \"\" };\r\n  const [foodMenuState, setFoodMenuState] = useState([{ ...blankFoodMenu }]);\r\n  const handleDynamicInput = (e, menuPrice = null) => {\r\n    const updatedFoodMenus = [...foodMenuState];\r\n    updatedFoodMenus[e.target.dataset.idx][e.target.dataset.attr] =\r\n      e.target.value;\r\n    if (menuPrice) {\r\n      updatedFoodMenus[e.target.dataset.idx][\"unit_price\"] = menuPrice;\r\n    }\r\n    setFoodMenuState(updatedFoodMenus);\r\n    calcSubTotal();\r\n  };\r\n  const calcSubTotal = data => {\r\n    const foodMenuStateData = data ? data : [...foodMenuState];\r\n    let sumSubTotal = 0;\r\n    foodMenuStateData.map(\r\n      i =>\r\n        (sumSubTotal +=\r\n          parseFloat(i.quantity ? i.quantity : 0) *\r\n          parseFloat(i.unit_price ? i.unit_price : 0))\r\n    );\r\n    setSubTotal(sumSubTotal);\r\n  };\r\n  const handleRemoveLineItem = id => {\r\n    const updatedFoodMenus = [...foodMenuState];\r\n    if (updatedFoodMenus.length > 1) {\r\n      const filteredInvoiceFoodMenus = updatedFoodMenus.filter((f, index) => {\r\n        if (index !== id) {\r\n          return { ...f };\r\n        }\r\n      });\r\n      setFoodMenuState(filteredInvoiceFoodMenus);\r\n    } else {\r\n      toast.warn(\"Atleast one item is required!\");\r\n    }\r\n  };\r\n  const addFoodMenu = () => {\r\n    setFoodMenuState([...foodMenuState, { ...blankFoodMenu }]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.rFetchAllFoodMenus();\r\n    if (query.get(\"order\")) {\r\n      getOrders({\r\n        orderId: query.get(\"order\")\r\n      }).then(res => {\r\n        setDescription(res.data.data.order.description);\r\n        const orderFoodMenus = res.data.data.order.order_food_menus;\r\n        const mappedOrderFoodMenus = orderFoodMenus.map(orderFoodMenu => {\r\n          return {\r\n            id: orderFoodMenu.id,\r\n            food_menu: orderFoodMenu.food_menu,\r\n            quantity: orderFoodMenu.quantity,\r\n            unit_price: orderFoodMenu.unit_price\r\n          };\r\n        });\r\n        setFoodMenuState(mappedOrderFoodMenus);\r\n        calcSubTotal(mappedOrderFoodMenus);\r\n      });\r\n    }\r\n    getUsers({}).then(res => {\r\n      setUserList(res.data.data.users);\r\n    });\r\n    if (props.match.params.id) {\r\n      setIsEditMode(true);\r\n      getInvoices({\r\n        invoiceId: props.match.params.id\r\n      }).then(res => {\r\n        setInvoiceForId(res.data.data.invoice.invoice_for);\r\n        setDescription(res.data.data.invoice.description);\r\n        setOrderNo(res.data.data.invoice.order_no);\r\n        setPaymentMode(res.data.data.invoice.payment_mode);\r\n        setPaidAmount(res.data.data.invoice.paid_amount);\r\n        setPaymentDescription(res.data.data.invoice.payment_description);\r\n        const invoiceFoodMenus = res.data.data.invoice.invoice_food_menus;\r\n        const mappedInvoiceFoodMenus = invoiceFoodMenus.map(invoiceFoodMenu => {\r\n          return {\r\n            id: invoiceFoodMenu.id,\r\n            food_menu: invoiceFoodMenu.food_menu,\r\n            quantity: invoiceFoodMenu.quantity,\r\n            unit_price: invoiceFoodMenu.unit_price\r\n          };\r\n        });\r\n        setFoodMenuState(mappedInvoiceFoodMenus);\r\n        calcSubTotal(mappedInvoiceFoodMenus);\r\n      });\r\n    }\r\n  }, [props]);\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const data = {\r\n      order_no: orderNo,\r\n      payment_mode: paymentMode,\r\n      paid_amount: paidAmount,\r\n      payment_description: paymentDescription,\r\n      invoice_for_id: invoiceForId,\r\n      description: description,\r\n      line_items: foodMenuState\r\n    };\r\n    console.log(data);\r\n    if (isEditMode) return updateInvoice(data, props);\r\n    createInvoice(data, props);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Row className=\"mt-2 ml-3 mr-3\">\r\n        {isEditMode ? <h3>Edit Invoice</h3> : <h3>New Invoice</h3>}\r\n      </Row>\r\n      <Form className=\"ml-3 mr-3\" onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column md=\"2\">\r\n            Customer Name\r\n          </Form.Label>\r\n          <Col md=\"4\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"invoice_for_id\"\r\n              id=\"invoice_for_id\"\r\n              value={invoiceForId}\r\n              onChange={e => setInvoiceForId(e.target.value)}\r\n            >\r\n              <option value=\"\">Select the Customer</option>\r\n              {userList.map(u => (\r\n                <option key={u.id} value={u.id}>\r\n                  {u.email}\r\n                </option>\r\n              ))}\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column md=\"2\">\r\n            Order No.\r\n          </Form.Label>\r\n          <Col md=\"4\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"orderNo\"\r\n              id=\"orderNo\"\r\n              value={orderNo}\r\n              onChange={e => setOrderNo(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column md=\"2\">\r\n            Description\r\n          </Form.Label>\r\n          <Col md=\"4\">\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows=\"3\"\r\n              value={description ? description : \"\"}\r\n              name=\"description\"\r\n              id=\"description\"\r\n              onChange={e => setDescription(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Table className=\"mt-2\">\r\n          <thead>\r\n            <tr>\r\n              <th>Food Menu</th>\r\n              <th>Quantity</th>\r\n              <th>Price</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {foodMenuState.map((val, idx) => {\r\n              return (\r\n                <FoodMenuLineItem\r\n                  idx={idx}\r\n                  key={idx}\r\n                  foodMenuItem={val}\r\n                  handleDynamicInput={handleDynamicInput}\r\n                  handleRemoveLineItem={handleRemoveLineItem}\r\n                />\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n        <Table>\r\n          <tbody>\r\n            <tr>\r\n              <td width=\"10%\">\r\n                <Button\r\n                  variant=\"secondary\"\r\n                  className=\"btn-sm\"\r\n                  onClick={addFoodMenu}\r\n                >\r\n                  Add new row\r\n                </Button>\r\n              </td>\r\n              <td width=\"20%\">\r\n                <Form.Group>\r\n                  <Form.Label>Payment Mode</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    name=\"payment_mode\"\r\n                    id=\"payment_mode\"\r\n                    value={paymentMode}\r\n                    onChange={e => setPaymentMode(e.target.value)}\r\n                  >\r\n                    <option value=\"\">Payment Mode</option>\r\n                    <option value=\"c\">Cash</option>\r\n                    <option value=\"cc\">Credit Card</option>\r\n                    <option value=\"dc\">Dedit Card</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </td>\r\n              <td width=\"20%\">\r\n                <Form.Group>\r\n                  <Form.Label>Paid Amount</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"paid_amount\"\r\n                    id=\"paid_amount\"\r\n                    value={paidAmount}\r\n                    onChange={e => setPaidAmount(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n              </td>\r\n              <td width=\"20%\">\r\n                <Form.Group>\r\n                  <Form.Label>Payment Description</Form.Label>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows=\"3\"\r\n                    value={paymentDescription ? paymentDescription : \"\"}\r\n                    name=\"payment_description\"\r\n                    id=\"payment_description\"\r\n                    onChange={e => setPaymentDescription(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n              </td>\r\n              <td width=\"20%\" align=\"right\">\r\n                <h2>\r\n                  <b>Sub Total : {subTotal}</b>\r\n                </h2>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </Fragment>\r\n  );\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    rFetchAllFoodMenus: () => {\r\n      dispatch(fetchAllFoodMenus({}));\r\n    }\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(InvoiceForm);\r\n","import React, { Fragment } from \"react\";\r\nimport { Tabs, Tab } from \"react-bootstrap\";\r\nimport InvoiceForm from \"./InvoiceForm\";\r\n\r\nconst InvoiceMultiForm = () => {\r\n  return (\r\n    <Fragment>\r\n      <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\r\n        <Tab eventKey=\"home\" title=\"Home\">\r\n          Home\r\n          <InvoiceForm />\r\n        </Tab>\r\n        <Tab eventKey=\"profile\" title=\"Profile\">\r\n          Profile\r\n          <InvoiceForm />\r\n        </Tab>\r\n      </Tabs>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default InvoiceMultiForm;\r\n","import React, { Fragment } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport InvoicesList from \"./InvoicesList\";\r\nimport InvoiceForm from \"./InvoiceForm\";\r\nimport InvoiceMultiForm from \"./InvoiceMultiForm\";\r\nimport { IsLoggedIn } from \"../../utils/IsLoggedIn\";\r\nconst Invoices = () => {\r\n  return (\r\n    <Fragment>\r\n      <IsLoggedIn />\r\n      <Switch>\r\n        <Route path=\"/invoices\" exact component={InvoicesList} />\r\n        <Route path=\"/invoices/new\" exact component={InvoiceForm} />\r\n        <Route path=\"/invoices/edit/:id\" exact component={InvoiceForm} />\r\n        <Route path=\"/invoices/multiform\" exact component={InvoiceMultiForm} />\r\n      </Switch>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Invoices;\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport kotAgent from \"../utils/API\";\r\nimport { decodeJWT } from \"../utils/helper\";\r\nconst _decodeJWT = decodeJWT();\r\nexport const _updateOnGoingFoodMenuOrder = payload => {\r\n  return {\r\n    type: actionTypes.UPDATE_ON_GOING_FOOD_MENU_ORDER,\r\n    payload\r\n  };\r\n};\r\nexport const _addOnGoingFoodMenuOrder = payload => {\r\n  return {\r\n    type: actionTypes.ADD_ON_GOING_FOOD_MENU_ORDER,\r\n    payload\r\n  };\r\n};\r\nexport const _addServedFoodMenuOrder = payload => {\r\n  return {\r\n    type: actionTypes.ADD_SERVED_FOOD_MENU_ORDER,\r\n    payload\r\n  };\r\n};\r\nexport const _cancelOnGoingFoodMenuOrder = payload => {\r\n  return {\r\n    type: actionTypes.CANCEL_ON_GOING_FOOD_MENU_ORDER,\r\n    payload\r\n  };\r\n};\r\nexport const updateAllKitchenOrders = payload => {\r\n  return {\r\n    type: actionTypes.GET_ALL_KITCHEN_ORDERS,\r\n    payload\r\n  };\r\n};\r\nexport const fetchAllKitchenOrders = () => dispatch => {\r\n  const _params = {};\r\n  if (_decodeJWT.is_kitchen_user) _params[\"branch_id\"] = _decodeJWT.branch;\r\n  kotAgent\r\n    .get(\"/get_food_menu_status\")\r\n    .then(response => {\r\n      dispatch(\r\n        updateAllKitchenOrders({\r\n          onGoingFoodMenuOrders: response.data.data.new_orders,\r\n          servedFoodMenuOrders: response.data.data.served_orders\r\n        })\r\n      );\r\n    })\r\n    .catch(error => {});\r\n};\r\nexport const updateOnGoingFoodMenuOrder = (id, status) => dispatch => {\r\n  const _params = {};\r\n  if (_decodeJWT.is_kitchen_user) _params[\"branch_id\"] = _decodeJWT.branch;\r\n  kotAgent\r\n    .put(\"/update_food_menu_status/\" + id, { status })\r\n    .then(response => {\r\n      dispatch(\r\n        _updateOnGoingFoodMenuOrder({\r\n          kitchenOrder: { id, status }\r\n        })\r\n      );\r\n    })\r\n    .catch(error => {});\r\n};\r\nexport const addOnGoingFoodMenuOrder = newOrders => dispatch => {\r\n  const _params = {};\r\n  if (_decodeJWT.is_kitchen_user) _params[\"branch_id\"] = _decodeJWT.branch;\r\n  dispatch(\r\n    _addOnGoingFoodMenuOrder({\r\n      newKitchenOrders: newOrders\r\n    })\r\n  );\r\n};\r\nexport const addServedFoodMenuOrder = (id, status) => dispatch => {\r\n  const _params = {};\r\n  if (_decodeJWT.is_kitchen_user) _params[\"branch_id\"] = _decodeJWT.branch;\r\n  kotAgent\r\n    .put(\"/update_food_menu_status/\" + id, { status })\r\n    .then(response => {\r\n      dispatch(\r\n        _addServedFoodMenuOrder({\r\n          kitchenOrder: { id, status }\r\n        })\r\n      );\r\n    })\r\n    .catch(error => {});\r\n};\r\nexport const cancelOnGoingFoodMenuOrder = cancelledFoodMenuStatusId => dispatch => {\r\n  dispatch(\r\n    _cancelOnGoingFoodMenuOrder({\r\n      cancelledFoodMenuStatusId\r\n    })\r\n  );\r\n};\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Button, Table, Image, Tabs, Tab } from \"react-bootstrap\";\r\nimport {\r\n  fetchAllKitchenOrders,\r\n  updateOnGoingFoodMenuOrder,\r\n  addOnGoingFoodMenuOrder,\r\n  addServedFoodMenuOrder,\r\n  cancelOnGoingFoodMenuOrder\r\n} from \"../../actions/kitchenOrders\";\r\n// let socket = new WebSocket(\"ws://192.168.0.97:8000/ws/\");\r\n// let socket = new WebSocket(\"wss://157.245.227.166/ws/\");\r\nconst KitchenOrderList = props => {\r\n  const {\r\n    onGoingFoodMenuOrders,\r\n    servedFoodMenuOrders,\r\n    rFetchKitchenOrders,\r\n    rUpdateOnGoingFoodMenuOrder,\r\n    rAddOnGoingFoodMenuOrder,\r\n    rAddServedFoodMenuOrder,\r\n    rCancelOnGoingFoodMenuOrder\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    rFetchKitchenOrders();\r\n    // socket.onmessage = function(event) {\r\n    //   var sData = JSON.parse(event.data);\r\n    //   if (sData.action_type === \"cancel_order\") {\r\n    //     rCancelOnGoingFoodMenuOrder(sData.data[0].id);\r\n    //   } else {\r\n    //     rAddOnGoingFoodMenuOrder(JSON.stringify(sData.data));\r\n    //   }\r\n    // };\r\n  }, []);\r\n  const onGoingFoodMenuRenderList = () => {\r\n    if (onGoingFoodMenuOrders.length === 0)\r\n      return (\r\n        <tr>\r\n          <td colSpan=\"5\" align=\"center\">\r\n            Order not found\r\n          </td>\r\n        </tr>\r\n      );\r\n    return onGoingFoodMenuOrders.map(f => (\r\n      <tr key={f.id}>\r\n        <td></td>\r\n        <td>{f.created_at}</td>\r\n        <td>{f.order_no}</td>\r\n        <td>{f.food_menu_name}</td>\r\n        <td>{f.quantity}</td>\r\n        <td>{f.status_code}</td>\r\n\r\n        <td>\r\n          {f.status_code !== \"Cancelled\" && (\r\n            <Fragment>\r\n              <button\r\n                className=\"btn btn-info btn-sm\"\r\n                onClick={() => rUpdateOnGoingFoodMenuOrder(f.id, \"Preparing\")}\r\n              >\r\n                Preparing\r\n              </button>\r\n              &nbsp;&nbsp;\r\n              <button\r\n                className=\"btn btn-primary btn-sm\"\r\n                onClick={() =>\r\n                  rUpdateOnGoingFoodMenuOrder(f.id, \"Ready to Serve\")\r\n                }\r\n              >\r\n                Ready to Serve\r\n              </button>\r\n              &nbsp;&nbsp;\r\n              <button\r\n                className=\"btn btn-success btn-sm\"\r\n                onClick={() => rAddServedFoodMenuOrder(f.id, \"Served\")}\r\n              >\r\n                Served\r\n              </button>\r\n            </Fragment>\r\n          )}\r\n        </td>\r\n      </tr>\r\n    ));\r\n  };\r\n  const servedFoodMenuRenderList = () => {\r\n    if (servedFoodMenuOrders.length === 0)\r\n      return (\r\n        <tr>\r\n          <td colSpan=\"5\" align=\"center\">\r\n            Order not found\r\n          </td>\r\n        </tr>\r\n      );\r\n    return servedFoodMenuOrders.map(f => (\r\n      <tr key={f.id}>\r\n        <td></td>\r\n        <td>{f.created_at}</td>\r\n        <td>{f.order_no}</td>\r\n        <td>{f.food_menu_name}</td>\r\n        <td>{f.quantity}</td>\r\n        <td>{f.status_code}</td>\r\n\r\n        <td>-</td>\r\n      </tr>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row className=\"m-1\">\r\n        <h2>Kitchen Orders</h2>\r\n      </Row>\r\n      <Tabs defaultActiveKey=\"onGoingOrderMenus\">\r\n        <Tab eventKey=\"onGoingOrderMenus\" title=\"On-going food menu list\">\r\n          <Table striped hover>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Order At</th>\r\n                <th>Order No.</th>\r\n                <th>Food Menu Name</th>\r\n                <th>Quantity</th>\r\n                <th>Current Status</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{onGoingFoodMenuRenderList()}</tbody>\r\n          </Table>\r\n        </Tab>\r\n        <Tab eventKey=\"servedOrderMenus\" title=\"Served food menu list\">\r\n          <Table striped hover>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Order At</th>\r\n                <th>Order No.</th>\r\n                <th>Food Menu Name</th>\r\n                <th>Quantity</th>\r\n                <th>Current Status</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{servedFoodMenuRenderList()}</tbody>\r\n          </Table>\r\n        </Tab>\r\n      </Tabs>\r\n    </Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    onGoingFoodMenuOrders:\r\n      state.rsKitchenOrder.kitchenOrderList.resultSet.onGoingFoodMenuOrders ||\r\n      [],\r\n    servedFoodMenuOrders:\r\n      state.rsKitchenOrder.kitchenOrderList.resultSet.servedFoodMenuOrders || []\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    rFetchKitchenOrders: () => {\r\n      dispatch(fetchAllKitchenOrders());\r\n    },\r\n    rUpdateOnGoingFoodMenuOrder: (id, status) => {\r\n      dispatch(updateOnGoingFoodMenuOrder(id, status));\r\n    },\r\n    rAddServedFoodMenuOrder: (id, status) => {\r\n      dispatch(addServedFoodMenuOrder(id, status));\r\n    },\r\n    rAddOnGoingFoodMenuOrder: newOrders => {\r\n      dispatch(addOnGoingFoodMenuOrder(newOrders));\r\n    },\r\n    rCancelOnGoingFoodMenuOrder: cancelledFoodMenuStatusId => {\r\n      dispatch(cancelOnGoingFoodMenuOrder(cancelledFoodMenuStatusId));\r\n    }\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(KitchenOrderList);\r\n","import React, { Fragment } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport KitchenOrderList from \"./KitchenOrderList\";\r\nimport { IsLoggedIn } from \"../../utils/IsLoggedIn\";\r\n\r\nconst FoodMenus = () => {\r\n  return (\r\n    <Fragment>\r\n      <IsLoggedIn />\r\n      <Switch>\r\n        <Route path=\"/kitchenOrders\" exact component={KitchenOrderList} />\r\n      </Switch>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default FoodMenus;\r\n","import React, { Fragment } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { ProtectedRoute } from \"../components/layouts\";\r\nimport {\r\n  Auth,\r\n  Users,\r\n  Branches,\r\n  Taxes,\r\n  Desks,\r\n  Categories,\r\n  FoodMenus,\r\n  Orders,\r\n  Invoices,\r\n  kitchenOrders,\r\n  PageNotFound\r\n} from \"../components\";\r\nimport { decodeJWT } from \"../utils/helper\";\r\nconst _decodeJWT = decodeJWT();\r\nconst Routes = () => {\r\n  return (\r\n    <Fragment>\r\n      {_decodeJWT.is_root_admin ? (\r\n        <Switch>\r\n          <ProtectedRoute path=\"/categories\" component={Categories} />\r\n          <ProtectedRoute path=\"/taxes\" component={Taxes} />\r\n          <ProtectedRoute path=\"/branches\" component={Branches} />\r\n          <ProtectedRoute path=\"/desks\" component={Desks} />\r\n          <ProtectedRoute path=\"/users\" component={Users} />\r\n        </Switch>\r\n      ) : null}\r\n      <Switch>\r\n        <ProtectedRoute path=\"/foodmenus\" component={FoodMenus} />\r\n        <ProtectedRoute path=\"/orders\" component={Orders} />\r\n        <ProtectedRoute path=\"/invoices\" component={Invoices} />\r\n        <ProtectedRoute path=\"/kitchenOrders\" component={kitchenOrders} />\r\n        <Route path=\"/\" component={Auth} />\r\n        <Route path=\"*\" component={PageNotFound} />\r\n      </Switch>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utils/helper\";\r\n\r\nconst initialState = {\r\n  foodMenuPaginationList: {\r\n    resultSet: null,\r\n    error: null,\r\n    isFetching: false,\r\n    isSuccess: true,\r\n    isFailed: false,\r\n    lastUpdateTime: null,\r\n    meta: {\r\n      currentPage: null,\r\n      totalRecords: null,\r\n      perPage: null,\r\n      params: null\r\n    }\r\n  },\r\n  foodMenuAllList: {\r\n    resultSet: null,\r\n    error: null,\r\n    isFetching: false,\r\n    isSuccess: true,\r\n    isFailed: false,\r\n    lastUpdateTime: null,\r\n    meta: {\r\n      currentPage: null,\r\n      totalRecords: null,\r\n      perPage: null,\r\n      params: null\r\n    }\r\n  }\r\n};\r\n\r\nconst fetchFoodMenus = (state, action) => {\r\n  return updateObject(state, {\r\n    foodMenuPaginationList: {\r\n      resultSet: action.payload.foodMenus,\r\n      meta: {\r\n        currentPage: action.payload.page,\r\n        totalRecords: action.payload.total,\r\n        perPage: action.payload.per_page,\r\n        params: null\r\n      },\r\n      isFetching: true\r\n    }\r\n  });\r\n};\r\nconst fetchAllFoodMenus = (state, action) => {\r\n  return updateObject(state, {\r\n    foodMenuAllList: {\r\n      resultSet: action.payload.foodMenus,\r\n      meta: {\r\n        totalRecords: action.payload.total\r\n      },\r\n      isFetching: true\r\n    }\r\n  });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GET_FOOD_MENUS:\r\n      return fetchFoodMenus(state, action);\r\n    case actionTypes.GET_ALL_FOOD_MENUS:\r\n      return fetchAllFoodMenus(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utils/helper\";\r\n\r\nconst initialState = {\r\n  kitchenOrderList: {\r\n    resultSet: {\r\n      onGoingFoodMenuOrders: null,\r\n      servedFoodMenuOrders: null\r\n    },\r\n    error: null,\r\n    isFetching: false,\r\n    isSuccess: true,\r\n    isFailed: false,\r\n    lastUpdateTime: null,\r\n    meta: {\r\n      currentPage: null,\r\n      totalRecords: null,\r\n      perPage: null,\r\n      params: null\r\n    }\r\n  }\r\n};\r\n\r\nconst fetchAllKitchenOrders = (state, action) => {\r\n  return updateObject(state, {\r\n    kitchenOrderList: {\r\n      resultSet: {\r\n        onGoingFoodMenuOrders: action.payload.onGoingFoodMenuOrders,\r\n        servedFoodMenuOrders: action.payload.servedFoodMenuOrders\r\n      },\r\n      isFetching: true\r\n    }\r\n  });\r\n};\r\nconst updateOnGoingFoodMenuOrder = (state, action) => {\r\n  const oldServedFoodMenuOrders =\r\n    state.kitchenOrderList.resultSet.servedFoodMenuOrders;\r\n  const oldOnGoingFoodMenuOrdersResultSet =\r\n    state.kitchenOrderList.resultSet.onGoingFoodMenuOrders;\r\n  const newOnGoingFoodMenuOrdersResultSet = oldOnGoingFoodMenuOrdersResultSet.map(\r\n    ko => {\r\n      if (ko.id === action.payload.kitchenOrder.id) {\r\n        return { ...ko, status_code: action.payload.kitchenOrder.status };\r\n      }\r\n      return ko;\r\n    }\r\n  );\r\n  return updateObject(state, {\r\n    kitchenOrderList: {\r\n      resultSet: {\r\n        onGoingFoodMenuOrders: newOnGoingFoodMenuOrdersResultSet,\r\n        servedFoodMenuOrders: oldServedFoodMenuOrders\r\n      },\r\n      isFetching: true\r\n    }\r\n  });\r\n};\r\nconst addOnGoingFoodMenuOrder = (state, action) => {\r\n  const oldResultSet = state.kitchenOrderList.resultSet.onGoingFoodMenuOrders;\r\n  const newResultSet = oldResultSet.concat(\r\n    JSON.parse(action.payload.newKitchenOrders)\r\n  );\r\n  return updateObject(state, {\r\n    kitchenOrderList: {\r\n      resultSet: { onGoingFoodMenuOrders: newResultSet },\r\n      isFetching: true\r\n    }\r\n  });\r\n};\r\nconst addServedFoodMenuOrder = (state, action) => {\r\n  const oldOnGoingFoodMenuOrdersResultSet =\r\n    state.kitchenOrderList.resultSet.onGoingFoodMenuOrders;\r\n  const oldServedFoodMenuOrdersResultSet =\r\n    state.kitchenOrderList.resultSet.servedFoodMenuOrders;\r\n  const newOnGoingFoodMenuOrdersResultSet = oldOnGoingFoodMenuOrdersResultSet.filter(\r\n    ko => {\r\n      if (ko.id !== action.payload.kitchenOrder.id) {\r\n        return ko;\r\n      }\r\n    }\r\n  );\r\n  const newServedFoodMenuOrder = oldOnGoingFoodMenuOrdersResultSet.filter(\r\n    ko => {\r\n      if (ko.id === action.payload.kitchenOrder.id) {\r\n        return ko;\r\n      }\r\n    }\r\n  );\r\n  newServedFoodMenuOrder[0][\"status_code\"] = action.payload.kitchenOrder.status;\r\n  const newServedFoodMenuOrdersResultSet = oldServedFoodMenuOrdersResultSet.concat(\r\n    newServedFoodMenuOrder\r\n  );\r\n  return updateObject(state, {\r\n    kitchenOrderList: {\r\n      resultSet: {\r\n        onGoingFoodMenuOrders: newOnGoingFoodMenuOrdersResultSet,\r\n        servedFoodMenuOrders: newServedFoodMenuOrdersResultSet\r\n      },\r\n      isFetching: true\r\n    }\r\n  });\r\n};\r\nconst cancelOnGoingFoodMenuOrder = (state, action) => {\r\n  const oldOnGoingFoodMenuOrdersResultSet =\r\n    state.kitchenOrderList.resultSet.onGoingFoodMenuOrders;\r\n  const oldServedFoodMenuOrdersResultSet =\r\n    state.kitchenOrderList.resultSet.servedFoodMenuOrders;\r\n  const newOnGoingFoodMenuOrdersResultSet = oldOnGoingFoodMenuOrdersResultSet.map(\r\n    ko => {\r\n      if (ko.id === action.payload.cancelledFoodMenuStatusId) {\r\n        ko[\"status_code\"] = \"Cancelled\";\r\n        return ko;\r\n      }\r\n      return ko;\r\n    }\r\n  );\r\n  return updateObject(state, {\r\n    kitchenOrderList: {\r\n      resultSet: {\r\n        onGoingFoodMenuOrders: newOnGoingFoodMenuOrdersResultSet,\r\n        servedFoodMenuOrders: oldServedFoodMenuOrdersResultSet\r\n      },\r\n      isFetching: true\r\n    }\r\n  });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GET_ALL_KITCHEN_ORDERS:\r\n      return fetchAllKitchenOrders(state, action);\r\n    case actionTypes.UPDATE_ON_GOING_FOOD_MENU_ORDER:\r\n      return updateOnGoingFoodMenuOrder(state, action);\r\n    case actionTypes.ADD_ON_GOING_FOOD_MENU_ORDER:\r\n      return addOnGoingFoodMenuOrder(state, action);\r\n    case actionTypes.ADD_SERVED_FOOD_MENU_ORDER:\r\n      return addServedFoodMenuOrder(state, action);\r\n    case actionTypes.CANCEL_ON_GOING_FOOD_MENU_ORDER:\r\n      return cancelOnGoingFoodMenuOrder(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport { Router } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { AppNav } from \"./components/layouts\";\r\nimport Routes from \"./routes\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { foodMenuReducer, kitchenOrderReducer } from \"./reducers\";\r\nconst browserHistory = createBrowserHistory();\r\nconst rootReducer = combineReducers({\r\n  rsFoodMenu: foodMenuReducer,\r\n  rsKitchenOrder: kitchenOrderReducer\r\n});\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router history={browserHistory}>\r\n        <div className=\"m-4 pt-5\">\r\n          <AppNav />\r\n          <Routes />\r\n        </div>\r\n        <ToastContainer\r\n          position={toast.POSITION.BOTTOM_CENTER}\r\n          autoClose={2000}\r\n          draggable={false}\r\n          hideProgressBar={true}\r\n        />\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}